{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Domain model definition for the deployment.domain-model project.",
  "description": "Domain model definition for the deployment.domain-model project.",
  "type": "object",
  "required": [],
  "properties": {
    "sections": {
      "description": "An entity describing a section.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.project.document.Section"
      }
    }
    ,
    "laplacian.project.Project": {
        "description": "An entity describing a project.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "project" },
          "group": {
            "description": "The group of this project.",
            "type": "string"
          },
          "name": {
            "description": "The name of this project.",
            "type": "string"
          },
          "type": {
            "description": "The type of this project.",
            "type": "string"
          },
          "author": {
            "description": "The author of this project.",
            "type": "string"
          },
          "licensor": {
            "description": "The licensor of this project.",
            "type": "string"
          },
          "license": {
            "description": "The license of this project.",
            "enum":[
              "MIT",
              "Apache2.0",
              "Closed"
            ],
            "type": "string"
          },
          "version": {
            "description": "The version of this project.",
            "type": "string"
          },
          "namespace": {
            "description": "The namespace of this project.",
            "type": "string"
          },
          "model_files": {
            "type": "array",
            "items": {
            "description": "The model_files of this project.",
            "type": "string"
            }
          },
          "template_files": {
            "type": "array",
            "items": {
            "description": "The template_files of this project.",
            "type": "string"
            }
          },
          "base_dir": {
            "description": "The base_dir of this project.",
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
            "description": "The sources of this project.",
            "type": "string"
            }
          },
          "description": {
            "description": "The description of this project.",
            "$ref": "#/definitions/entities/laplacian.common.MultilingualText"
          },
          "subprojects": {
            "description": "The subprojects of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Project"
            }
          },
          "source_repository": {
            "description": "The source_repository of this project.",
            "$ref": "#/definitions/entities/laplacian.project.SourceRepository"
          },
          "module_repositories": {
            "description": "The module_repositories of this project.",
            "$ref": "#/definitions/entities/laplacian.project.ModuleRepositoryList"
          },
          "document": {
            "description": "The document of this project.",
            "$ref": "#/definitions/entities/laplacian.project.Document"
          },
          "scripts": {
            "description": "The scripts of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Script"
            }
          },
          "models": {
            "description": "The models of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          },
          "templates": {
            "description": "The templates of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          },
          "plugins": {
            "description": "The plugins of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          }
        }
      }
    ,
    "project_types": {
      "description": "An entity describing a project_type.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.project.ProjectType"
      }
    }
    ,
    "scripts": {
      "description": "An entity describing a script.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.project.Script"
      }
    }
    ,
    "options": {
      "description": "An entity describing a option.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.project.script.Option"
      }
    }
    ,
    "multilingual_texts": {
      "description": "An entity describing a multilingual_text.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.common.MultilingualText"
      }
    }
    ,
    "entities": {
      "description": "An entity describing a entity.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.metamodel.Entity"
      }
    }
    ,
    "value_domain_types": {
      "description": "An entity describing a value_domain_type.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.metamodel.ValueDomainType"
      }
    }
    ,
    "api_call_arguments": {
      "description": "An entity describing a api_call_argument.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.ApiCallArgument"
      }
    }
    ,
    "cache_policies": {
      "description": "An entity describing a cache_policy.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.cache.CachePolicy"
      }
    }
    ,
    "datasources": {
      "description": "A *DataSource* represents an interface through which a client application access to a data store.\nThis includes the following models.\n- The entity that the datastore exposes to the client\n- Statement issued by the client to the datastore",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.datasource.Datasource"
      }
    }
    ,
    "datasource_entries": {
      "description": "An entity describing a datasource_entry.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.datasource.DatasourceEntry"
      }
    }
    ,
    "durations": {
      "description": "An entity describing a duration.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.Duration"
      }
    }
    ,
    "bucket_script_paths": {
      "description": "An entity describing a bucket_script_path.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.BucketScriptPath"
      }
    }
    ,
    "field_sorts": {
      "description": "An entity describing a field_sort.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.FieldSort"
      }
    }
    ,
    "date_histogram_extended_boundses": {
      "description": "An entity describing a date_histogram_extended_bounds.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramExtendedBounds"
      }
    }
    ,
    "date_histogram_intervals": {
      "description": "An entity describing a date_histogram_interval.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramInterval"
      }
    }
    ,
    "aggregate_group_ranges": {
      "description": "An entity describing a aggregate_group_range.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.AggregateGroupRange"
      }
    }
    ,
    "keyed_filters": {
      "description": "An entity describing a keyed_filter.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.KeyedFilter"
      }
    }
    ,
    "elasticsearch_aggregates": {
      "description": "An entity describing a elasticsearch_aggregate.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
      }
    }
    ,
    "elasticsearch_indexes": {
      "description": "An entity describing a elasticsearch_index.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.ElasticsearchIndex"
      }
    }
    ,
    "elasticsearch_index_sorts": {
      "description": "An entity describing a elasticsearch_index_sort.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.ElasticsearchIndexSort"
      }
    }
    ,
    "elasticsearch_query_predicates": {
      "description": "An entity describing a elasticsearch_query_predicate.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
      }
    }
    ,
    "elasticsearch_query_sorts": {
      "description": "An entity describing a elasticsearch_query_sort.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQuerySort"
      }
    }
    ,
    "elasticsearch_queries": {
      "description": "An entity describing a elasticsearch_query.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.ElasticsearchQuery"
      }
    }
    ,
    "mybatis_mappers": {
      "description": "An entity describing a mybatis_mapper.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.rdb.mybatis.MybatisMapper"
      }
    }
    ,
    "rest_request_parameters": {
      "description": "An entity describing a rest_request_parameter.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestRequestParameter"
      }
    }
    ,
    "rest_resources": {
      "description": "An entity describing a rest_resource.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestResource"
      }
    }
    ,
    "services": {
      "description": "An entity describing a service.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.Service"
      }
    }
    ,
    "elastic_search_clients": {
      "description": "An entity describing a elastic_search_client.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.ElasticSearchClient"
      }
    }
    ,
    "graphql_types": {
      "description": "An entity describing a graphql_type.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlType"
      }
    }
    ,
    "graphql_type_relationship_field_mappings": {
      "description": "An entity describing a graphql_type_relationship_field_mapping.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationshipFieldMapping"
      }
    }
    ,
    "service_configurations": {
      "description": "An entity describing a service_configuration.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.ServiceConfiguration"
      }
    }
    ,
    "service_configuration_categories": {
      "description": "An entity describing a service_configuration_category.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.ServiceConfigurationCategory"
      }
    }
    ,
    "configuration_bindings": {
      "description": "An entity describing a configuration_binding.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding"
      }
    }
    ,
    "components": {
      "description": "An entity describing a component.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.component.Component"
      }
    }
    ,
    "environment_variable_definitions": {
      "description": "An entity describing a environment_variable_definition.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.component.container.EnvironmentVariableDefinition"
      }
    }
    ,
    "configuration_files": {
      "description": "An entity describing a configuration_file.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.component.elasticsearch.ConfigurationFile"
      }
    }
    ,
    "maven_artifacts": {
      "description": "An entity describing a maven_artifact.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.component.MavenArtifact"
      }
    }
    ,
    "redis_container_deployments": {
      "description": "An entity describing a redis_container_deployment.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.component.redis.RedisContainerDeployment"
      }
    }
    ,
    "redis_container_images": {
      "description": "An entity describing a redis_container_image.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.component.redis.RedisContainerImage"
      }
    }
    ,
    "datasets": {
      "description": "An entity describing a dataset.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.Dataset"
      }
    }
    ,
    "data_files": {
      "description": "An entity describing a data_file.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.container.DataFile"
      }
    }
    ,
    "environments": {
      "description": "An entity describing a environment.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/entities/laplacian.arch.deployment.Environment"
      }
    }
  },
  "definitions": {
    "value_domain_types": {
      "language_code": {
        "description": "ISO-639-1 Language code",
        "enum":[
           "ab",
           "aa",
           "af",
           "ak",
           "sq",
           "am",
           "ar",
           "an",
           "hy",
           "as",
           "av",
           "ae",
           "ay",
           "az",
           "bm",
           "ba",
           "eu",
           "be",
           "bn",
           "bh",
           "bi",
           "bs",
           "br",
           "bg",
           "my",
           "ca",
           "ch",
           "ce",
           "ny",
           "zh",
           "zh-Hans",
           "zh-Hant",
           "cv",
           "kw",
           "co",
           "cr",
           "hr",
           "cs",
           "da",
           "dv",
           "nl",
           "dz",
           "en",
           "eo",
           "et",
           "ee",
           "fo",
           "fj",
           "fi",
           "fr",
           "ff",
           "gl",
           "gd",
           "gv",
           "ka",
           "de",
           "el",
           "kl",
           "gn",
           "gu",
           "ht",
           "ha",
           "he",
           "hz",
           "hi",
           "ho",
           "hu",
           "is",
           "io",
           "ig",
           "id, in",
           "ia",
           "ie",
           "iu",
           "ik",
           "ga",
           "it",
           "ja",
           "jv",
           "kl",
           "kn",
           "kr",
           "ks",
           "kk",
           "km",
           "ki",
           "rw",
           "rn",
           "ky",
           "kv",
           "kg",
           "ko",
           "ku",
           "kj",
           "lo",
           "la",
           "lv",
           "li",
           "ln",
           "lt",
           "lu",
           "lg",
           "lb",
           "gv",
           "mk",
           "mg",
           "ms",
           "ml",
           "mt",
           "mi",
           "mr",
           "mh",
           "mo",
           "mn",
           "na",
           "nv",
           "ng",
           "nd",
           "ne",
           "no",
           "nb",
           "nn",
           "ii",
           "oc",
           "oj",
           "cu",
           "or",
           "om",
           "os",
           "pi",
           "ps",
           "fa",
           "pl",
           "pt",
           "pa",
           "qu",
           "rm",
           "ro",
           "ru",
           "se",
           "sm",
           "sg",
           "sa",
           "sr",
           "sh",
           "st",
           "tn",
           "sn",
           "ii",
           "sd",
           "si",
           "ss",
           "sk",
           "sl",
           "so",
           "nr",
           "es",
           "su",
           "sw",
           "ss",
           "sv",
           "tl",
           "ty",
           "tg",
           "ta",
           "tt",
           "te",
           "th",
           "bo",
           "ti",
           "to",
           "ts",
           "tr",
           "tk",
           "tw",
           "ug",
           "uk",
           "ur",
           "uz",
           "ve",
           "vi",
           "vo",
           "wa",
           "cy",
           "wo",
           "fy",
           "xh",
           "yi, ji",
           "yo",
           "za",
           "zu"
        ],
        "type": "string"
      },
      "basic_type": {
        "description": "basic scalar type",
        "enum":[
           "string",
           "boolean",
           "number",
           "int",
           "float",
           "double",
           "date",
           "time",
           "datetime",
           "any_entity"
        ],
        "type": "string"
      },
      "identifier": {
        "description": "主要言語で識別子として使用可能な文字列",
        "pattern": "^[_$a-zA-Z][_$a-zA-Z0-9]*$",
        "type": "string"
      },
      "namespace": {
        "description": "名前空間",
        "pattern": "^[_a-zA-Z][_$a-zA-Z0-9]*(\\.[_a-zA-Z][_$a-zA-Z0-9]*)*$",
        "type": "string"
      },
      "http_method_for_rest": {
        "description": "http_method_for_rest",
        "enum":[
           "GET",
           "POST",
           "PUT",
           "PATCH",
           "DELETE"
        ],
        "type": "string"
      },
      "integer_or_placeholder": {
        "description": "integer_or_placeholder",
        "pattern": "^\\$\\{[^}]*\\}|[1-9][0-9]*|0$",
        "type": "string"
      },
      "service_configuration_name": {
        "description": "service_configuration_name",
        "pattern": "^[a-z]+(-[0-9a-z]+)*$",
        "type": "string"
      },
      "service_configuration_category": {
        "description": "service_configuration_category",
        "pattern": "^[a-z][-a-z0-9]*(\\.[a-z][-a-z0-9]*)*$",
        "type": "string"
      },
      "sort_order_or_placeholder": {
        "description": "sort_order_or_placeholder",
        "pattern": "^\\$\\{[^}]*\\}|asc|desc$",
        "type": "string"
      },
      "url_path_with_placeholders": {
        "description": "url_path_with_placeholders",
        "pattern": "^(/[-$_a-zA-Z0-9]*|/\\{[_$a-zA-Z][_$a-zA-Z0-9]*\\})+$",
        "type": "string"
      }
    },
    "entities": {
      "laplacian.project.Document": {
        "description": "An entity describing a document.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "document" },
          "title": {
            "description": "The title of this document.",
            "type": "string"
          },
          "author": {
            "description": "The author of this document.",
            "type": "string"
          },
          "rights": {
            "description": "The rights of this document.",
            "type": "string"
          },
          "abstract": {
            "description": "The abstract of this document.",
            "type": "string"
          },
          "sections": {
            "description": "The sections of this document.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.document.Section"
            }
          },
          "languages": {
            "description": "The languages of this document.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.document.DocumentLanguage"
            }
          }
        }
      },
      "laplacian.project.document.DocumentLanguage": {
        "description": "An entity describing a document_language.",
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "document_language" },
          "name": {
            "description": "The name of this document_language.",
            "type": "string"
          },
          "code": {
            "allOf": [{
            "description": "The code of this document_language.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/language_code"
            }]
          }
        }
      },
      "laplacian.project.document.Section": {
        "description": "An entity describing a section.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "section" },
          "name": {
            "description": "The name of this section.",
            "type": "string"
          },
          "order": {
            "description": "The order of this section.",
            "type": "number"
          },
          "title": {
            "description": "The title of this section.",
            "$ref": "#/definitions/entities/laplacian.common.MultilingualText"
          },
          "content": {
            "description": "The content of this section.",
            "$ref": "#/definitions/entities/laplacian.common.MultilingualText"
          },
          "sub_sections": {
            "description": "The sub_sections of this section.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.document.Section"
            }
          }
        }
      },
      "laplacian.project.Module": {
        "description": "An entity describing a module.",
        "type": "object",
        "required": [
          "name",
          "group",
          "version"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "module" },
          "name": {
            "description": "The name of this module.",
            "type": "string"
          },
          "group": {
            "description": "The group of this module.",
            "type": "string"
          },
          "version": {
            "description": "The version of this module.",
            "type": "string"
          }
        }
      },
      "laplacian.project.ModuleRepositoryList": {
        "description": "An entity describing a module_repository_list.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "module_repository_list" },
          "local": {
            "description": "The local of this module_repository_list.",
            "type": "string"
          },
          "remote": {
            "type": "array",
            "items": {
            "description": "The remote of this module_repository_list.",
            "type": "string"
            }
          }
        }
      },
      "laplacian.project.Project": {
        "description": "An entity describing a project.",
        "type": "object",
        "required": [
          "group",
          "name",
          "version",
          "sources"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "project" },
          "group": {
            "description": "The group of this project.",
            "type": "string"
          },
          "name": {
            "description": "The name of this project.",
            "type": "string"
          },
          "type": {
            "description": "The type of this project.",
            "type": "string"
          },
          "author": {
            "description": "The author of this project.",
            "type": "string"
          },
          "licensor": {
            "description": "The licensor of this project.",
            "type": "string"
          },
          "license": {
            "description": "The license of this project.",
            "enum":[
              "MIT",
              "Apache2.0",
              "Closed"
            ],
            "type": "string"
          },
          "version": {
            "description": "The version of this project.",
            "type": "string"
          },
          "namespace": {
            "description": "The namespace of this project.",
            "type": "string"
          },
          "model_files": {
            "type": "array",
            "items": {
            "description": "The model_files of this project.",
            "type": "string"
            }
          },
          "template_files": {
            "type": "array",
            "items": {
            "description": "The template_files of this project.",
            "type": "string"
            }
          },
          "base_dir": {
            "description": "The base_dir of this project.",
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
            "description": "The sources of this project.",
            "type": "string"
            }
          },
          "description": {
            "description": "The description of this project.",
            "$ref": "#/definitions/entities/laplacian.common.MultilingualText"
          },
          "subprojects": {
            "description": "The subprojects of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Project"
            }
          },
          "source_repository": {
            "description": "The source_repository of this project.",
            "$ref": "#/definitions/entities/laplacian.project.SourceRepository"
          },
          "module_repositories": {
            "description": "The module_repositories of this project.",
            "$ref": "#/definitions/entities/laplacian.project.ModuleRepositoryList"
          },
          "document": {
            "description": "The document of this project.",
            "$ref": "#/definitions/entities/laplacian.project.Document"
          },
          "scripts": {
            "description": "The scripts of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Script"
            }
          },
          "models": {
            "description": "The models of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          },
          "templates": {
            "description": "The templates of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          },
          "plugins": {
            "description": "The plugins of this project.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          }
        }
      },
      "laplacian.project.ProjectType": {
        "description": "An entity describing a project_type.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "project_type" },
          "name": {
            "description": "The name of this project_type.",
            "type": "string"
          },
          "role": {
            "description": "The role of this project_type.",
            "enum":[
              "generator",
              "model",
              "template",
              "plugin"
            ],
            "type": "string"
          },
          "description": {
            "description": "The description of this project_type.",
            "type": "string"
          },
          "base_type_name": {
            "description": "The base_type_name of this project_type.",
            "type": "string"
          },
          "models": {
            "description": "The models of this project_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          },
          "templates": {
            "description": "The templates of this project_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          },
          "plugins": {
            "description": "The plugins of this project_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.Module"
            }
          }
        }
      },
      "laplacian.project.Script": {
        "description": "An entity describing a script.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "script" },
          "name": {
            "description": "The name of this script.",
            "type": "string"
          },
          "description": {
            "description": "The description of this script.",
            "$ref": "#/definitions/entities/laplacian.common.MultilingualText"
          },
          "options": {
            "description": "The options of this script.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.project.script.Option"
            }
          }
        }
      },
      "laplacian.project.script.Option": {
        "description": "An entity describing a option.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "option" },
          "name": {
            "description": "The name of this option.",
            "type": "string"
          },
          "is_flag": {
            "description": "Defines this option is is_flag or not.",
            "type": "boolean"
          },
          "is_interactive": {
            "description": "Defines this option is is_interactive or not.",
            "type": "boolean"
          },
          "prompt": {
            "description": "The prompt of this option.",
            "type": "string"
          },
          "default_value": {
            "description": "The default_value of this option.",
            "type": "string"
          },
          "is_multiple": {
            "description": "Defines this option is is_multiple or not.",
            "type": "boolean"
          },
          "is_required": {
            "description": "Defines this option is is_required or not.",
            "type": "boolean"
          },
          "short_name": {
            "description": "The short_name of this option.",
            "pattern": "^[0-9a-zA-Z]$",
            "type": "string"
          },
          "description": {
            "description": "The description of this option.",
            "$ref": "#/definitions/entities/laplacian.common.MultilingualText"
          }
        }
      },
      "laplacian.project.SourceRepository": {
        "description": "An entity describing a source_repository.",
        "type": "object",
        "required": [
          "url"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "source_repository" },
          "url": {
            "description": "The url of this source_repository.",
            "type": "string"
          },
          "branch": {
            "description": "The branch of this source_repository.",
            "type": "string"
          }
        }
      },
      "laplacian.common.LocalizedText": {
        "description": "An entity describing a localized_text.",
        "type": "object",
        "required": [
          "language",
          "content"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "localized_text" },
          "language": {
            "description": "The language of this localized_text.",
            "type": "string"
          },
          "content": {
            "description": "The content of this localized_text.",
            "type": "string"
          }
        }
      },
      "laplacian.common.MultilingualText": {
        "description": "An entity describing a multilingual_text.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "multilingual_text" },
          "ab": {
            "description": "In Abkhazian",
            "type": "string"
          },
          "aa": {
            "description": "In Afar",
            "type": "string"
          },
          "af": {
            "description": "In Afrikaans",
            "type": "string"
          },
          "ak": {
            "description": "In Akan",
            "type": "string"
          },
          "sq": {
            "description": "In Albanian",
            "type": "string"
          },
          "am": {
            "description": "In Amharic",
            "type": "string"
          },
          "ar": {
            "description": "In Arabic",
            "type": "string"
          },
          "an": {
            "description": "In Aragonese",
            "type": "string"
          },
          "hy": {
            "description": "In Armenian",
            "type": "string"
          },
          "lang_as": {
            "description": "In Assamese",
            "type": "string"
          },
          "av": {
            "description": "In Avaric",
            "type": "string"
          },
          "ae": {
            "description": "In Avestan",
            "type": "string"
          },
          "ay": {
            "description": "In Aymara",
            "type": "string"
          },
          "az": {
            "description": "In Azerbaijani",
            "type": "string"
          },
          "bm": {
            "description": "In Bambara",
            "type": "string"
          },
          "ba": {
            "description": "In Bashkir",
            "type": "string"
          },
          "eu": {
            "description": "In Basque",
            "type": "string"
          },
          "be": {
            "description": "In Belarusian",
            "type": "string"
          },
          "bn": {
            "description": "In Bengali (Bangla)",
            "type": "string"
          },
          "bh": {
            "description": "In Bihari",
            "type": "string"
          },
          "bi": {
            "description": "In Bislama",
            "type": "string"
          },
          "bs": {
            "description": "In Bosnian",
            "type": "string"
          },
          "br": {
            "description": "In Breton",
            "type": "string"
          },
          "bg": {
            "description": "In Bulgarian",
            "type": "string"
          },
          "my": {
            "description": "In Burmese",
            "type": "string"
          },
          "ca": {
            "description": "In Catalan",
            "type": "string"
          },
          "ch": {
            "description": "In Chamorro",
            "type": "string"
          },
          "ce": {
            "description": "In Chechen",
            "type": "string"
          },
          "ny": {
            "description": "In Chichewa, Chewa, Nyanja",
            "type": "string"
          },
          "zh": {
            "description": "In Chinese",
            "type": "string"
          },
          "zh_hans": {
            "description": "In Chinese (Simplified)",
            "type": "string"
          },
          "zh_hant": {
            "description": "In Chinese (Traditional)",
            "type": "string"
          },
          "cv": {
            "description": "In Chuvash",
            "type": "string"
          },
          "kw": {
            "description": "In Cornish",
            "type": "string"
          },
          "co": {
            "description": "In Corsican",
            "type": "string"
          },
          "cr": {
            "description": "In Cree",
            "type": "string"
          },
          "hr": {
            "description": "In Croatian",
            "type": "string"
          },
          "cs": {
            "description": "In Czech",
            "type": "string"
          },
          "da": {
            "description": "In Danish",
            "type": "string"
          },
          "dv": {
            "description": "In Divehi, Dhivehi, Maldivian",
            "type": "string"
          },
          "nl": {
            "description": "In Dutch",
            "type": "string"
          },
          "dz": {
            "description": "In Dzongkha",
            "type": "string"
          },
          "en": {
            "description": "In English",
            "type": "string"
          },
          "eo": {
            "description": "In Esperanto",
            "type": "string"
          },
          "et": {
            "description": "In Estonian",
            "type": "string"
          },
          "ee": {
            "description": "In Ewe",
            "type": "string"
          },
          "fo": {
            "description": "In Faroese",
            "type": "string"
          },
          "fj": {
            "description": "In Fijian",
            "type": "string"
          },
          "fi": {
            "description": "In Finnish",
            "type": "string"
          },
          "fr": {
            "description": "In French",
            "type": "string"
          },
          "ff": {
            "description": "In Fula, Fulah, Pulaar, Pular",
            "type": "string"
          },
          "gl": {
            "description": "In Galician",
            "type": "string"
          },
          "gd": {
            "description": "In Gaelic (Scottish)",
            "type": "string"
          },
          "gv": {
            "description": "In Manx",
            "type": "string"
          },
          "ka": {
            "description": "In Georgian",
            "type": "string"
          },
          "de": {
            "description": "In German",
            "type": "string"
          },
          "el": {
            "description": "In Greek",
            "type": "string"
          },
          "kl": {
            "description": "In Kalaallisut, Greenlandic",
            "type": "string"
          },
          "gn": {
            "description": "In Guarani",
            "type": "string"
          },
          "gu": {
            "description": "In Gujarati",
            "type": "string"
          },
          "ht": {
            "description": "In Haitian Creole",
            "type": "string"
          },
          "ha": {
            "description": "In Hausa",
            "type": "string"
          },
          "he": {
            "description": "In Hebrew",
            "type": "string"
          },
          "hz": {
            "description": "In Herero",
            "type": "string"
          },
          "hi": {
            "description": "In Hindi",
            "type": "string"
          },
          "ho": {
            "description": "In Hiri Motu",
            "type": "string"
          },
          "hu": {
            "description": "In Hungarian",
            "type": "string"
          },
          "lang_is": {
            "description": "In Icelandic",
            "type": "string"
          },
          "io": {
            "description": "In Ido",
            "type": "string"
          },
          "ig": {
            "description": "In Igbo",
            "type": "string"
          },
          "id_in": {
            "description": "In Indonesian",
            "type": "string"
          },
          "ia": {
            "description": "In Interlingua",
            "type": "string"
          },
          "ie": {
            "description": "In Interlingue",
            "type": "string"
          },
          "iu": {
            "description": "In Inuktitut",
            "type": "string"
          },
          "ik": {
            "description": "In Inupiak",
            "type": "string"
          },
          "ga": {
            "description": "In Irish",
            "type": "string"
          },
          "it": {
            "description": "In Italian",
            "type": "string"
          },
          "ja": {
            "description": "In Japanese",
            "type": "string"
          },
          "jv": {
            "description": "In Javanese",
            "type": "string"
          },
          "kn": {
            "description": "In Kannada",
            "type": "string"
          },
          "kr": {
            "description": "In Kanuri",
            "type": "string"
          },
          "ks": {
            "description": "In Kashmiri",
            "type": "string"
          },
          "kk": {
            "description": "In Kazakh",
            "type": "string"
          },
          "km": {
            "description": "In Khmer",
            "type": "string"
          },
          "ki": {
            "description": "In Kikuyu",
            "type": "string"
          },
          "rw": {
            "description": "In Kinyarwanda (Rwanda)",
            "type": "string"
          },
          "rn": {
            "description": "In Kirundi",
            "type": "string"
          },
          "ky": {
            "description": "In Kyrgyz",
            "type": "string"
          },
          "kv": {
            "description": "In Komi",
            "type": "string"
          },
          "kg": {
            "description": "In Kongo",
            "type": "string"
          },
          "ko": {
            "description": "In Korean",
            "type": "string"
          },
          "ku": {
            "description": "In Kurdish",
            "type": "string"
          },
          "kj": {
            "description": "In Kwanyama",
            "type": "string"
          },
          "lo": {
            "description": "In Lao",
            "type": "string"
          },
          "la": {
            "description": "In Latin",
            "type": "string"
          },
          "lv": {
            "description": "In Latvian (Lettish)",
            "type": "string"
          },
          "li": {
            "description": "In Limburgish ( Limburger)",
            "type": "string"
          },
          "ln": {
            "description": "In Lingala",
            "type": "string"
          },
          "lt": {
            "description": "In Lithuanian",
            "type": "string"
          },
          "lu": {
            "description": "In Luga-Katanga",
            "type": "string"
          },
          "lg": {
            "description": "In Luganda, Ganda",
            "type": "string"
          },
          "lb": {
            "description": "In Luxembourgish",
            "type": "string"
          },
          "mk": {
            "description": "In Macedonian",
            "type": "string"
          },
          "mg": {
            "description": "In Malagasy",
            "type": "string"
          },
          "ms": {
            "description": "In Malay",
            "type": "string"
          },
          "ml": {
            "description": "In Malayalam",
            "type": "string"
          },
          "mt": {
            "description": "In Maltese",
            "type": "string"
          },
          "mi": {
            "description": "In Maori",
            "type": "string"
          },
          "mr": {
            "description": "In Marathi",
            "type": "string"
          },
          "mh": {
            "description": "In Marshallese",
            "type": "string"
          },
          "mo": {
            "description": "In Moldavian",
            "type": "string"
          },
          "mn": {
            "description": "In Mongolian",
            "type": "string"
          },
          "na": {
            "description": "In Nauru",
            "type": "string"
          },
          "nv": {
            "description": "In Navajo",
            "type": "string"
          },
          "ng": {
            "description": "In Ndonga",
            "type": "string"
          },
          "nd": {
            "description": "In Northern Ndebele",
            "type": "string"
          },
          "ne": {
            "description": "In Nepali",
            "type": "string"
          },
          "no": {
            "description": "In Norwegian",
            "type": "string"
          },
          "nb": {
            "description": "In Norwegian bokmål",
            "type": "string"
          },
          "nn": {
            "description": "In Norwegian nynorsk",
            "type": "string"
          },
          "ii": {
            "description": "In Sichuan Yi",
            "type": "string"
          },
          "oc": {
            "description": "In Occitan",
            "type": "string"
          },
          "oj": {
            "description": "In Ojibwe",
            "type": "string"
          },
          "cu": {
            "description": "In Old Church Slavonic, Old Bulgarian",
            "type": "string"
          },
          "or": {
            "description": "In Oriya",
            "type": "string"
          },
          "om": {
            "description": "In Oromo (Afaan Oromo)",
            "type": "string"
          },
          "os": {
            "description": "In Ossetian",
            "type": "string"
          },
          "pi": {
            "description": "In Pāli",
            "type": "string"
          },
          "ps": {
            "description": "In Pashto, Pushto",
            "type": "string"
          },
          "fa": {
            "description": "In Persian (Farsi)",
            "type": "string"
          },
          "pl": {
            "description": "In Polish",
            "type": "string"
          },
          "pt": {
            "description": "In Portuguese",
            "type": "string"
          },
          "pa": {
            "description": "In Punjabi (Eastern)",
            "type": "string"
          },
          "qu": {
            "description": "In Quechua",
            "type": "string"
          },
          "rm": {
            "description": "In Romansh",
            "type": "string"
          },
          "ro": {
            "description": "In Romanian",
            "type": "string"
          },
          "ru": {
            "description": "In Russian",
            "type": "string"
          },
          "se": {
            "description": "In Sami",
            "type": "string"
          },
          "sm": {
            "description": "In Samoan",
            "type": "string"
          },
          "sg": {
            "description": "In Sango",
            "type": "string"
          },
          "sa": {
            "description": "In Sanskrit",
            "type": "string"
          },
          "sr": {
            "description": "In Serbian",
            "type": "string"
          },
          "sh": {
            "description": "In Serbo-Croatian",
            "type": "string"
          },
          "st": {
            "description": "In Sesotho",
            "type": "string"
          },
          "tn": {
            "description": "In Setswana",
            "type": "string"
          },
          "sn": {
            "description": "In Shona",
            "type": "string"
          },
          "sd": {
            "description": "In Sindhi",
            "type": "string"
          },
          "si": {
            "description": "In Sinhalese",
            "type": "string"
          },
          "ss": {
            "description": "In Swati",
            "type": "string"
          },
          "sk": {
            "description": "In Slovak",
            "type": "string"
          },
          "sl": {
            "description": "In Slovenian",
            "type": "string"
          },
          "so": {
            "description": "In Somali",
            "type": "string"
          },
          "nr": {
            "description": "In Southern Ndebele",
            "type": "string"
          },
          "es": {
            "description": "In Spanish",
            "type": "string"
          },
          "su": {
            "description": "In Sundanese",
            "type": "string"
          },
          "sw": {
            "description": "In Swahili (Kiswahili)",
            "type": "string"
          },
          "sv": {
            "description": "In Swedish",
            "type": "string"
          },
          "tl": {
            "description": "In Tagalog",
            "type": "string"
          },
          "ty": {
            "description": "In Tahitian",
            "type": "string"
          },
          "tg": {
            "description": "In Tajik",
            "type": "string"
          },
          "ta": {
            "description": "In Tamil",
            "type": "string"
          },
          "tt": {
            "description": "In Tatar",
            "type": "string"
          },
          "te": {
            "description": "In Telugu",
            "type": "string"
          },
          "th": {
            "description": "In Thai",
            "type": "string"
          },
          "bo": {
            "description": "In Tibetan",
            "type": "string"
          },
          "ti": {
            "description": "In Tigrinya",
            "type": "string"
          },
          "to": {
            "description": "In Tonga",
            "type": "string"
          },
          "ts": {
            "description": "In Tsonga",
            "type": "string"
          },
          "tr": {
            "description": "In Turkish",
            "type": "string"
          },
          "tk": {
            "description": "In Turkmen",
            "type": "string"
          },
          "tw": {
            "description": "In Twi",
            "type": "string"
          },
          "ug": {
            "description": "In Uyghur",
            "type": "string"
          },
          "uk": {
            "description": "In Ukrainian",
            "type": "string"
          },
          "ur": {
            "description": "In Urdu",
            "type": "string"
          },
          "uz": {
            "description": "In Uzbek",
            "type": "string"
          },
          "ve": {
            "description": "In Venda",
            "type": "string"
          },
          "vi": {
            "description": "In Vietnamese",
            "type": "string"
          },
          "vo": {
            "description": "In Volapük",
            "type": "string"
          },
          "wa": {
            "description": "In Wallon",
            "type": "string"
          },
          "cy": {
            "description": "In Welsh",
            "type": "string"
          },
          "wo": {
            "description": "In Wolof",
            "type": "string"
          },
          "fy": {
            "description": "In Western Frisian",
            "type": "string"
          },
          "xh": {
            "description": "In Xhosa",
            "type": "string"
          },
          "yi_ji": {
            "description": "In Yiddish",
            "type": "string"
          },
          "yo": {
            "description": "In Yoruba",
            "type": "string"
          },
          "za": {
            "description": "In Zhuang, Chuang",
            "type": "string"
          },
          "zu": {
            "description": "In Zulu",
            "type": "string"
          }
        }
      },
      "laplacian.common.NamedParam": {
        "description": "An entity describing a named_param.",
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "named_param" },
          "name": {
            "description": "The name of this named_param.",
            "type": "string"
          },
          "type": {
            "description": "The type of this named_param.",
            "type": "string"
          },
          "description": {
            "description": "The description of this named_param.",
            "type": "string"
          }
        }
      },
      "laplacian.common.NamedValue": {
        "description": "An entity describing a named_value.",
        "type": "object",
        "required": [
          "name",
          "expression"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "named_value" },
          "name": {
            "description": "The name of this named_value.",
            "type": "string"
          },
          "expression": {
            "description": "The expression of this named_value.",
            "type": "string"
          }
        }
      },
      "laplacian.metamodel.Entity": {
        "description": "An entity describing a entity.",
        "type": "object",
        "required": [
          "name",
          "namespace"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "entity" },
          "name": {
            "description": "The name of this entity.",
            "type": "string"
          },
          "namespace": {
            "allOf": [{
            "description": "The namespace of this entity.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/namespace"
            }]
          },
          "identifier": {
            "allOf": [{
            "description": "The identifier of this entity.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/identifier"
            }]
          },
          "singly_rooted": {
            "description": "If this property is true, there is the \"root\" instance, which is accessible globally.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of this entity.",
            "type": "string"
          },
          "value_object": {
            "description": "Defines this entity is value_object or not.",
            "type": "boolean"
          },
          "supertype_name": {
            "description": "The supertype_name of this entity.",
            "type": "string"
          },
          "supertype_namespace": {
            "description": "The supertype_namespace of this entity.",
            "type": "string"
          },
          "subtype_key_value": {
            "description": "The value of subtype key that represents this type of entity,\nwhich is used when implementing polymorphism. The name of entity is used by default.",
            "type": "string"
          },
          "deprecated": {
            "description": "Defines this entity is deprecated or not.",
            "type": "boolean"
          },
          "examples": {
            "type": "array",
            "items": {
            "description": "examples which explain actual usage of this entity",
            "type": "string"
            }
          },
          "properties": {
            "description": "The properties of this entity (excluding supertypes')",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.metamodel.Property"
            }
          },
          "relationships": {
            "description": "The relationships with other entities (excluding supertypes')",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.metamodel.Relationship"
            }
          },
          "queries": {
            "description": "このエンティティに対するルートクエリ",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.metamodel.Query"
            }
          }
        }
      },
      "laplacian.metamodel.Property": {
        "description": "An entity describing a property.",
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "property" },
          "name": {
            "description": "The name of this property.",
            "type": "string"
          },
          "identifier": {
            "allOf": [{
            "description": "The identifier of this property.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/identifier"
            }]
          },
          "primary_key": {
            "description": "Defines this property is primary_key or not.",
            "type": "boolean"
          },
          "subtype_key": {
            "description": "Defines this property is subtype_key or not.",
            "type": "boolean"
          },
          "type": {
            "allOf": [{
            "description": "The type of this property.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/basic_type"
            }]
          },
          "domain_type_name": {
            "description": "The name of predefined value domain type for this property.",
            "type": "string"
          },
          "size": {
            "description": "The maximum allowed size of the content of this property.",
            "type": "number"
          },
          "optional": {
            "description": "Defines this property is optional or not.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of this property.",
            "type": "string"
          },
          "default_value": {
            "description": "The default value of this property, which is used when the actual value is null",
            "type": "string"
          },
          "example_values": {
            "type": "array",
            "items": {
            "description": "Kotlin expressions which represent some typical values of this property.",
            "type": "string"
            }
          },
          "table_column_name": {
            "description": "The table_column_name of this property.",
            "type": "string"
          },
          "snippet": {
            "description": "The snippet of this property.",
            "type": "string"
          },
          "multiple": {
            "description": "Defines this property is multiple or not.",
            "type": "boolean"
          },
          "deprecated": {
            "description": "Defines this property is deprecated or not.",
            "type": "boolean"
          },
          "domain": {
            "description": "The domain of this property.",
            "$ref": "#/definitions/entities/laplacian.metamodel.ValueDomain"
          }
        }
      },
      "laplacian.metamodel.PropertyMapping": {
        "description": "An entity describing a property_mapping.",
        "type": "object",
        "required": [
          "from",
          "to"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "property_mapping" },
          "from": {
            "description": "The from of this property_mapping.",
            "type": "string"
          },
          "to": {
            "description": "The to of this property_mapping.",
            "type": "string"
          },
          "null_value": {
            "description": "The null_value of this property_mapping.",
            "type": "string"
          }
        }
      },
      "laplacian.metamodel.Query": {
        "description": "The queries from which all navigation originates.",
        "type": "object",
        "required": [
          "name",
          "snippet"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "query" },
          "name": {
            "description": "クエリ名称",
            "type": "string"
          },
          "identifier": {
            "allOf": [{
            "description": "識別子",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/identifier"
            }]
          },
          "type": {
            "description": "結果型",
            "type": "string"
          },
          "result_entity_name": {
            "description": "クエリ結果エンティティ名",
            "type": "string"
          },
          "description": {
            "description": "詳細",
            "type": "string"
          },
          "cardinality": {
            "description": "多重度",
            "type": "string"
          },
          "snippet": {
            "description": "クエリスクリプト",
            "type": "string"
          },
          "deprecated": {
            "description": "Defines this query is deprecated or not.",
            "type": "boolean"
          }
        }
      },
      "laplacian.metamodel.Relationship": {
        "description": "An entity describing a relationship.",
        "type": "object",
        "required": [
          "name",
          "cardinality",
          "reference_entity_name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "relationship" },
          "name": {
            "description": "The name of this relationship.",
            "type": "string"
          },
          "identifier": {
            "allOf": [{
            "description": "The identifier of this relationship.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/identifier"
            }]
          },
          "cardinality": {
            "description": "The cardinality of this relationship.",
            "enum":[
              "1",
              "0..1",
              "*",
              "1..*"
            ],
            "type": "string"
          },
          "reference_entity_name": {
            "description": "The reference_entity_name of this relationship.",
            "type": "string"
          },
          "reference_entity_namespace": {
            "description": "The reference_entity_namespace of this relationship.",
            "type": "string"
          },
          "aggregate": {
            "description": "Defines this relationship is aggregate or not.",
            "type": "boolean"
          },
          "inherited": {
            "description": "Defines this relationship is inherited or not.",
            "type": "boolean"
          },
          "reverse_of": {
            "description": "The reverse_of of this relationship.",
            "type": "string"
          },
          "description": {
            "description": "The description of this relationship.",
            "type": "string"
          },
          "snippet": {
            "description": "The snippet of this relationship.",
            "type": "string"
          },
          "deprecated": {
            "description": "Defines this relationship is deprecated or not.",
            "type": "boolean"
          },
          "examples": {
            "type": "array",
            "items": {
            "description": "The examples of this relationship.",
            "type": "string"
            }
          },
          "mappings": {
            "description": "The mappings of this relationship.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.metamodel.PropertyMapping"
            }
          }
        }
      },
      "laplacian.metamodel.ValueDomain": {
        "description": "An entity describing a value_domain.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "value_domain" },
          "pattern": {
            "description": "Allowed pattern in Regular expression.",
            "type": "string"
          },
          "choices": {
            "description": "The list of allowed values.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.metamodel.ValueItem"
            }
          }
        }
      },
      "laplacian.metamodel.ValueDomainType": {
        "description": "An entity describing a value_domain_type.",
        "type": "object",
        "required": [
          "name",
          "namespace",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "value_domain_type" },
          "name": {
            "description": "The name of this value_domain_type.",
            "type": "string"
          },
          "namespace": {
            "allOf": [{
            "description": "The namespace of this value_domain_type.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/namespace"
            }]
          },
          "type": {
            "allOf": [{
            "description": "The type of this value_domain_type.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/basic_type"
            }]
          },
          "description": {
            "description": "The description of this value_domain_type.",
            "type": "string"
          },
          "domain": {
            "description": "The domain of this value_domain_type.",
            "$ref": "#/definitions/entities/laplacian.metamodel.ValueDomain"
          }
        }
      },
      "laplacian.metamodel.ValueItem": {
        "description": "An entity describing a value_item.",
        "type": "object",
        "required": [
          "value"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "value_item" },
          "value": {
            "description": "The value of this value_item.",
            "type": "string"
          },
          "label": {
            "description": "The label of this value_item.",
            "type": "string"
          },
          "description": {
            "description": "The description of this value_item.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.ApiCallArgument": {
        "description": "An entity describing a api_call_argument.",
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "api_call_argument" },
          "name": {
            "description": "The name of this api_call_argument.",
            "type": "string"
          },
          "type": {
            "description": "The type of this api_call_argument.",
            "enum":[
              "string",
              "int",
              "float",
              "boolean",
              "date",
              "time",
              "datetime"
            ],
            "type": "string"
          },
          "description": {
            "description": "The description of this api_call_argument.",
            "type": "string"
          },
          "required": {
            "description": "Defines this api_call_argument is required or not.",
            "type": "boolean"
          },
          "multiple": {
            "description": "Defines this api_call_argument is multiple or not.",
            "type": "boolean"
          },
          "default_value": {
            "description": "The default_value of this api_call_argument.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.cache.CachePolicy": {
        "description": "An entity describing a cache_policy.",
        "type": "object",
        "required": [
          "name",
          "store_type"
        ],
        "properties": {
          "_class_": { "const": "cache_policy" },
          "name": {
            "description": "The name of this cache_policy.",
            "type": "string"
          },
          "store_type": {
            "description": "The store_type of this cache_policy.",
            "enum":[
              "heap",
              "redis"
            ],
            "type": "string"
          },
          "ignore_error": {
            "description": "Defines this cache_policy is ignore_error or not.",
            "type": "boolean"
          },
          "expiration_time": {
            "description": "The expiration_time of this cache_policy.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.Duration"
          },
          "configurations": {
            "description": "The configurations of this cache_policy.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding"
            }
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.cache.HeapMemoryCachePolicy" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.cache.RedisCachePolicy" }
        ]
      },
      "laplacian.arch.api.service.cache.HeapMemoryCachePolicy": {
        "description": "An entity describing a heap_memory_cache_policy.",
        "if": { "properties": {
          "store_type": { "const": "heap" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "heap_memory_cache_policy" },
          "name": {
            "description": "The name of this cache_policy.",
            "type": "string"
          },
          "store_type": {
            "description": "The store_type of this cache_policy.",
            "enum":[
              "heap",
              "redis"
            ],
            "type": "string"
          },
          "ignore_error": {
            "description": "Defines this cache_policy is ignore_error or not.",
            "type": "boolean"
          },
          "expiration_time": {
            "description": "The expiration_time of this cache_policy.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.Duration"
          },
          "configurations": {
            "description": "The configurations of this cache_policy.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.cache.RedisCachePolicy": {
        "description": "An entity describing a redis_cache_policy.",
        "if": { "properties": {
          "store_type": { "const": "redis" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "redis_cache_policy" },
          "name": {
            "description": "The name of this cache_policy.",
            "type": "string"
          },
          "store_type": {
            "description": "The store_type of this cache_policy.",
            "enum":[
              "heap",
              "redis"
            ],
            "type": "string"
          },
          "ignore_error": {
            "description": "Defines this cache_policy is ignore_error or not.",
            "type": "boolean"
          },
          "expiration_time": {
            "description": "The expiration_time of this cache_policy.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.Duration"
          },
          "configurations": {
            "description": "The configurations of this cache_policy.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.datasource.Datasource": {
        "description": "A *DataSource* represents an interface through which a client application access to a data store.\nThis includes the following models.\n- The entity that the datastore exposes to the client\n- Statement issued by the client to the datastore",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "_class_": { "const": "datasource" },
          "type": {
            "description": "The type of this datasource.",
            "enum":[
              "oracle_jdbc"
            ],
            "type": "string"
          },
          "name": {
            "description": "The name of this datasource.",
            "type": "string"
          },
          "description": {
            "description": "The description of this datasource.",
            "type": "string"
          },
          "configurations": {
            "description": "The configurations of this datasource.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding"
            }
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.datasource.OracleDatasource" }
        ]
      },
      "laplacian.arch.api.service.datasource.DatasourceEntry": {
        "description": "An entity describing a datasource_entry.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "datasource_entry" },
          "name": {
            "description": "The name of this datasource_entry.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.datasource.OracleDatasource": {
        "description": "An entity describing a oracle_datasource.",
        "if": { "properties": {
          "type": { "const": "oracle_jdbc" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "oracle_datasource" },
          "type": {
            "description": "The type of this datasource.",
            "enum":[
              "oracle_jdbc"
            ],
            "type": "string"
          },
          "name": {
            "description": "The name of this datasource.",
            "type": "string"
          },
          "description": {
            "description": "The description of this datasource.",
            "type": "string"
          },
          "url": {
            "description": "The url of this oracle_datasource.",
            "type": "string"
          },
          "username": {
            "description": "The username of this oracle_datasource.",
            "type": "string"
          },
          "password": {
            "description": "The password of this oracle_datasource.",
            "type": "string"
          },
          "driver_class_name": {
            "description": "The driver_class_name of this oracle_datasource.",
            "type": "string"
          },
          "minimum_idle_connections": {
            "description": "The minimum_idle_connections of this oracle_datasource.",
            "type": "number"
          },
          "maximum_connections": {
            "description": "The maximum_connections of this oracle_datasource.",
            "type": "number"
          },
          "idle_connection_timeout": {
            "description": "The idle_connection_timeout of this oracle_datasource.",
            "type": "number"
          },
          "maximum_connection_lifetime": {
            "description": "The maximum_connection_lifetime of this oracle_datasource.",
            "type": "number"
          },
          "connection_timeout": {
            "description": "The connection_timeout of this oracle_datasource.",
            "type": "number"
          },
          "configurations": {
            "description": "The configurations of this datasource.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.Duration": {
        "description": "An entity describing a duration.",
        "type": "object",
        "required": [
          "amount",
          "unit"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "duration" },
          "amount": {
            "allOf": [{
            "description": "The amount of this duration.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "unit": {
            "description": "The unit of this duration.",
            "enum":[
              "day",
              "hour",
              "second",
              "millisecond"
            ],
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.AvgBucketAggregate": {
        "description": "An entity describing a avg_bucket_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "avg_bucket" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "avg_bucket_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "buckets_path": {
            "description": "The buckets_path of this avg_bucket_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.BucketScriptAggregate": {
        "description": "An entity describing a bucket_script_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "bucket_script" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "bucket_script_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "script": {
            "description": "The script of this bucket_script_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "buckets_path": {
            "description": "The buckets_path of this bucket_script_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.BucketScriptPath"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.BucketScriptPath": {
        "description": "An entity describing a bucket_script_path.",
        "type": "object",
        "required": [
          "name",
          "path"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "bucket_script_path" },
          "name": {
            "description": "The name of this bucket_script_path.",
            "type": "string"
          },
          "path": {
            "description": "The path of this bucket_script_path.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.BucketSelectorAggregate": {
        "description": "An entity describing a bucket_selector_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "bucket_selector" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "bucket_selector_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "script": {
            "description": "The script of this bucket_selector_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "buckets_path": {
            "description": "The buckets_path of this bucket_selector_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.BucketScriptPath"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.BucketSortAggregate": {
        "description": "An entity describing a bucket_sort_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "bucket_sort" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "bucket_sort_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "from": {
            "allOf": [{
            "description": "Zero-based from index.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "bucket_size": {
            "allOf": [{
            "description": "The size of the bucket_sort to be returned.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "sorts": {
            "description": "The sorts of this bucket_sort_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.FieldSort"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.FieldSort": {
        "description": "An entity describing a field_sort.",
        "type": "object",
        "required": [
          "field"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "field_sort" },
          "field": {
            "description": "The field of this field_sort.",
            "type": "string"
          },
          "order": {
            "description": "The order of this field_sort.",
            "pattern": "^\\$\\{[^}]*\\}|asc|desc$",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramAggregate": {
        "description": "An entity describing a date_histogram_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "date_histogram" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "date_histogram_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "format": {
            "description": "The format of this date_histogram_aggregate.",
            "type": "string"
          },
          "timezone": {
            "description": "The timezone of this date_histogram_aggregate.",
            "type": "string"
          },
          "min_doc_count": {
            "allOf": [{
            "description": "the minimum document count required per bucket",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "interval": {
            "description": "The interval of this date_histogram_aggregate.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramInterval"
          },
          "extended_bounds": {
            "description": "The extended_bounds of this date_histogram_aggregate.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramExtendedBounds"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramExtendedBounds": {
        "description": "An entity describing a date_histogram_extended_bounds.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "date_histogram_extended_bounds" },
          "min": {
            "description": "The min of this date_histogram_extended_bounds.",
            "type": "string"
          },
          "max": {
            "description": "The max of this date_histogram_extended_bounds.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramInterval": {
        "description": "An entity describing a date_histogram_interval.",
        "type": "object",
        "required": [
          "type",
          "unit",
          "value"
        ],
        "properties": {
          "_class_": { "const": "date_histogram_interval" },
          "type": {
            "description": "The type of this date_histogram_interval.",
            "enum":[
              "calendar",
              "fixed"
            ],
            "type": "string"
          },
          "unit": {
            "description": "The unit of this date_histogram_interval.",
            "type": "string"
          },
          "value": {
            "description": "The value of this date_histogram_interval.",
            "type": "string"
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramCalendarInterval" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramFixedInterval" }
        ]
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramCalendarInterval": {
        "description": "An entity describing a date_histogram_calendar_interval.",
        "if": { "properties": {
          "type": { "const": "calendar" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "date_histogram_calendar_interval" },
          "type": {
            "description": "The type of this date_histogram_interval.",
            "enum":[
              "calendar",
              "fixed"
            ],
            "type": "string"
          },
          "unit": {
            "description": "The unit of this date_histogram_interval.",
            "type": "string"
          },
          "value": {
            "description": "The value of this date_histogram_interval.",
            "type": "string"
          },
          "unit": {
            "description": "The unit of this date_histogram_calendar_interval.",
            "pattern": "^\\$\\{[^}]*\\}|minute|hour|day|week|month|quarter|year$",
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramFixedInterval": {
        "description": "An entity describing a date_histogram_fixed_interval.",
        "if": { "properties": {
          "type": { "const": "fixed" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "date_histogram_fixed_interval" },
          "type": {
            "description": "The type of this date_histogram_interval.",
            "enum":[
              "calendar",
              "fixed"
            ],
            "type": "string"
          },
          "unit": {
            "description": "The unit of this date_histogram_interval.",
            "type": "string"
          },
          "value": {
            "description": "The value of this date_histogram_interval.",
            "type": "string"
          },
          "unit": {
            "description": "The unit of this date_histogram_fixed_interval.",
            "pattern": "^\\$\\{[^}]*\\}|millisecond|second|minute|hour|day$",
            "type": "string"
          },
          "value": {
            "description": "The value of this date_histogram_fixed_interval.",
            "pattern": "^\\$\\{[^}]*\\}|[0-9]*$",
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.DateRangeAggregate": {
        "description": "An entity describing a date_range_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "date_range" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "date_range_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "format": {
            "description": "The format of this date_range_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "ranges": {
            "description": "The ranges of this date_range_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.AggregateGroupRange"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.AggregateGroupRange": {
        "description": "An entity describing a aggregate_group_range.",
        "type": "object",
        "required": [
          "key"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "aggregate_group_range" },
          "key": {
            "description": "The key of this aggregate_group_range.",
            "type": "string"
          },
          "from": {
            "description": "The from of this aggregate_group_range.",
            "type": "string"
          },
          "to": {
            "description": "The to of this aggregate_group_range.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.FilterAggregate": {
        "description": "An entity describing a filter_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "filter" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "filter_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "predicate": {
            "description": "The predicate of this filter_aggregate.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.FiltersAggregate": {
        "description": "An entity describing a filters_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "filters" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "filters_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "filters": {
            "description": "The filters of this filters_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.KeyedFilter"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.KeyedFilter": {
        "description": "An entity describing a keyed_filter.",
        "type": "object",
        "required": [
          "key"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "keyed_filter" },
          "key": {
            "description": "The key of this keyed_filter.",
            "type": "string"
          },
          "predicate": {
            "description": "The predicate of this keyed_filter.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.SumAggregate": {
        "description": "An entity describing a sum_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "sum" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "sum_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.AvgAggregate": {
        "description": "An entity describing a avg_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "avg" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "avg_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.MinAggregate": {
        "description": "An entity describing a min_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "min" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "min_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.MaxAggregate": {
        "description": "An entity describing a max_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "max" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "max_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.ValueCountAggregate": {
        "description": "An entity describing a value_count_aggregate.",
        "if": { "properties": {
          "aggregation_type": { "const": "count" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "value_count_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.TermsAggregate": {
        "description": "A multi-bucket value source based aggregation where buckets are dynamically built\n- one per unique value.",
        "if": { "properties": {
          "aggregation_type": { "const": "terms" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "terms_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "max_buckets": {
            "allOf": [{
            "description": "The number of term buckets should be returned (default: 10)",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "sort_by_count": {
            "allOf": [{
            "description": "The sort order ('asc' or 'desc') in which the buckets will be returned",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/sort_order_or_placeholder"
            }]
          },
          "shard_size": {
            "allOf": [{
            "description": "The number of term buckets each shard will return to the coordinating node\n(the node that coordinates the search execution)",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "min_doc_count": {
            "allOf": [{
            "description": "the minimum document count required per term",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate": {
        "description": "An entity describing a elasticsearch_aggregate.",
        "type": "object",
        "required": [
          "name",
          "aggregation_type"
        ],
        "properties": {
          "_class_": { "const": "elasticsearch_aggregate" },
          "name": {
            "description": "The name of this elasticsearch_aggregate.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_aggregate.",
            "type": "string"
          },
          "aggregation_type": {
            "description": "The aggregation_type of this elasticsearch_aggregate.",
            "enum":[
              "avg_bucket",
              "bucket_script",
              "bucket_selector",
              "bucket_sort",
              "date_histogram",
              "date_range",
              "filter",
              "filters",
              "sum",
              "avg",
              "min",
              "max",
              "count",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this elasticsearch_aggregate.",
            "type": "string"
          },
          "sub_aggregates": {
            "description": "The sub_aggregates of this elasticsearch_aggregate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.AvgBucketAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.BucketScriptAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.BucketSelectorAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.BucketSortAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateRangeAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.FilterAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.FiltersAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.SumAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.AvgAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.MinAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.MaxAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ValueCountAggregate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.TermsAggregate" }
        ]
      },
      "laplacian.arch.api.service.elasticsearch.ElasticsearchIndex": {
        "description": "An entity describing a elasticsearch_index.",
        "type": "object",
        "required": [
          "name",
          "document_model_name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elasticsearch_index" },
          "name": {
            "description": "The name of this elasticsearch_index.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_index.",
            "type": "string"
          },
          "document_model_name": {
            "description": "The document_model_name of this elasticsearch_index.",
            "type": "string"
          },
          "default_sorts": {
            "description": "The default_sorts of this elasticsearch_index.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.ElasticsearchIndexSort"
            }
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.ElasticsearchIndexSort": {
        "description": "An entity describing a elasticsearch_index_sort.",
        "type": "object",
        "required": [
          "field"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elasticsearch_index_sort" },
          "field": {
            "description": "The field of this elasticsearch_index_sort.",
            "type": "string"
          },
          "order": {
            "description": "The order of this elasticsearch_index_sort.",
            "enum":[
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "is_numeric": {
            "description": "Defines this elasticsearch_index_sort is is_numeric or not.",
            "type": "boolean"
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate": {
        "description": "An entity describing a elasticsearch_query_predicate.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "_class_": { "const": "elasticsearch_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.BoolQueryPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ExistsQueryPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.MatchAllQueryPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.MatchQueryPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.MultiMatchQueryPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.QueryStringPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.RangeQueryPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.TermQueryPredicate" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.TermsQueryPredicate" }
        ]
      },
      "laplacian.arch.api.service.elasticsearch.query.ElasticsearchQuerySort": {
        "description": "An entity describing a elasticsearch_query_sort.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "_class_": { "const": "elasticsearch_query_sort" },
          "type": {
            "description": "The type of this elasticsearch_query_sort.",
            "enum":[
              "score",
              "field"
            ],
            "type": "string"
          },
          "order": {
            "allOf": [{
            "description": "The order of this elasticsearch_query_sort.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/sort_order_or_placeholder"
            }]
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryScoreSort" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryFieldSort" }
        ]
      },
      "laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryScoreSort": {
        "description": "An entity describing a elasticsearch_query_score_sort.",
        "if": { "properties": {
          "type": { "const": "score" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elasticsearch_query_score_sort" },
          "type": {
            "description": "The type of this elasticsearch_query_sort.",
            "enum":[
              "score",
              "field"
            ],
            "type": "string"
          },
          "order": {
            "allOf": [{
            "description": "The order of this elasticsearch_query_sort.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/sort_order_or_placeholder"
            }]
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryFieldSort": {
        "description": "An entity describing a elasticsearch_query_field_sort.",
        "if": { "properties": {
          "type": { "const": "field" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elasticsearch_query_field_sort" },
          "type": {
            "description": "The type of this elasticsearch_query_sort.",
            "enum":[
              "score",
              "field"
            ],
            "type": "string"
          },
          "order": {
            "allOf": [{
            "description": "The order of this elasticsearch_query_sort.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/sort_order_or_placeholder"
            }]
          },
          "name": {
            "description": "The name of this elasticsearch_query_field_sort.",
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.ElasticsearchQuery": {
        "description": "An entity describing a elasticsearch_query.",
        "type": "object",
        "required": [
          "name",
          "index_name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elasticsearch_query" },
          "name": {
            "description": "The name of this elasticsearch_query.",
            "type": "string"
          },
          "index_name": {
            "description": "The index_name of this elasticsearch_query.",
            "type": "string"
          },
          "description": {
            "description": "The description of this elasticsearch_query.",
            "type": "string"
          },
          "page_size": {
            "allOf": [{
            "description": "The size of the page to be returned",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "page_number": {
            "allOf": [{
            "description": "Zero-based page index.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/integer_or_placeholder"
            }]
          },
          "predicate": {
            "description": "The predicate of this elasticsearch_query.",
            "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
          },
          "sort": {
            "description": "The sort of this elasticsearch_query.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQuerySort"
            }
          },
          "aggregates": {
            "description": "The aggregates of this elasticsearch_query.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate"
            }
          },
          "parameters": {
            "description": "The parameters of this elasticsearch_query.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ApiCallArgument"
            }
          }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.BoolQueryPredicate": {
        "description": "An entity describing a bool_query_predicate.",
        "if": { "properties": {
          "type": { "const": "bool" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "bool_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "must": {
            "description": "The must of this bool_query_predicate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
            }
          },
          "must_not": {
            "description": "The must_not of this bool_query_predicate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
            }
          },
          "should": {
            "description": "The should of this bool_query_predicate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
            }
          },
          "filter": {
            "description": "The filter of this bool_query_predicate.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.ExistsQueryPredicate": {
        "description": "An entity describing a exists_query_predicate.",
        "if": { "properties": {
          "type": { "const": "exists" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "exists_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this exists_query_predicate.",
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.MatchAllQueryPredicate": {
        "description": "An entity describing a match_all_query_predicate.",
        "if": { "properties": {
          "type": { "const": "match_all" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "match_all_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.MatchQueryPredicate": {
        "description": "An entity describing a match_query_predicate.",
        "if": { "properties": {
          "type": { "const": "match" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "match_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this match_query_predicate.",
            "type": "string"
          },
          "value": {
            "description": "The value of this match_query_predicate.",
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.MultiMatchQueryPredicate": {
        "description": "An entity describing a multi_match_query_predicate.",
        "if": { "properties": {
          "type": { "const": "multi_match" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "multi_match_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of this multi_match_query_predicate.",
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
            "description": "The fields of this multi_match_query_predicate.",
            "type": "string"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.QueryStringPredicate": {
        "description": "An entity describing a query_string_predicate.",
        "if": { "properties": {
          "type": { "const": "query_string" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "query_string_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "query": {
            "description": "The query of this query_string_predicate.",
            "type": "string"
          },
          "default_field": {
            "description": "The default_field of this query_string_predicate.",
            "type": "string"
          },
          "allow_leading_wildcard": {
            "description": "Defines this query_string_predicate is allow_leading_wildcard or not.",
            "type": "boolean"
          },
          "analyze_wildcard": {
            "description": "Defines this query_string_predicate is analyze_wildcard or not.",
            "type": "boolean"
          },
          "analyzer": {
            "description": "The analyzer of this query_string_predicate.",
            "type": "string"
          },
          "auto_generate_synonyms_phrase_query": {
            "description": "Defines this query_string_predicate is auto_generate_synonyms_phrase_query or not.",
            "type": "boolean"
          },
          "boost": {
            "description": "The boost of this query_string_predicate.",
            "type": "float"
          },
          "default_operator": {
            "description": "The default_operator of this query_string_predicate.",
            "enum":[
              "OR",
              "AND"
            ],
            "type": "string"
          },
          "enable_position_increments": {
            "description": "Defines this query_string_predicate is enable_position_increments or not.",
            "type": "boolean"
          },
          "fields": {
            "type": "array",
            "items": {
            "description": "The fields of this query_string_predicate.",
            "type": "string"
            }
          },
          "fuzziness": {
            "description": "The fuzziness of this query_string_predicate.",
            "enum":[
              "AUTO",
              "ONE",
              "TWO",
              "ZERO"
            ],
            "type": "string"
          },
          "fuzzy_max_expansion": {
            "description": "The fuzzy_max_expansion of this query_string_predicate.",
            "type": "int"
          },
          "fuzzy_prefix_length": {
            "description": "The fuzzy_prefix_length of this query_string_predicate.",
            "type": "int"
          },
          "fuzzy_transpositions": {
            "description": "Defines this query_string_predicate is fuzzy_transpositions or not.",
            "type": "boolean"
          },
          "lenient": {
            "description": "Defines this query_string_predicate is lenient or not.",
            "type": "boolean"
          },
          "max_determinized_states": {
            "description": "The max_determinized_states of this query_string_predicate.",
            "type": "int"
          },
          "minimum_should_match": {
            "description": "The minimum_should_match of this query_string_predicate.",
            "type": "string"
          },
          "quote_analyzer": {
            "description": "The quote_analyzer of this query_string_predicate.",
            "type": "string"
          },
          "phrase_slop": {
            "description": "The phrase_slop of this query_string_predicate.",
            "type": "int"
          },
          "quote_field_suffix": {
            "description": "The quote_field_suffix of this query_string_predicate.",
            "type": "string"
          },
          "rewrite": {
            "description": "The rewrite of this query_string_predicate.",
            "type": "string"
          },
          "time_zone": {
            "description": "The time_zone of this query_string_predicate.",
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.RangeQueryPredicate": {
        "description": "An entity describing a range_query_predicate.",
        "if": { "properties": {
          "type": { "const": "range" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "range_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this range_query_predicate.",
            "type": "string"
          },
          "from": {
            "description": "The from of this range_query_predicate.",
            "type": "string"
          },
          "to": {
            "description": "The to of this range_query_predicate.",
            "type": "string"
          },
          "include_lower": {
            "description": "Defines this range_query_predicate is include_lower or not.",
            "type": "boolean"
          },
          "include_upper": {
            "description": "Defines this range_query_predicate is include_upper or not.",
            "type": "boolean"
          },
          "timezone": {
            "description": "The timezone of this range_query_predicate.",
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.TermQueryPredicate": {
        "description": "An entity describing a term_query_predicate.",
        "if": { "properties": {
          "type": { "const": "term" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "term_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this term_query_predicate.",
            "type": "string"
          },
          "value": {
            "description": "The value of this term_query_predicate.",
            "type": "string"
          },
          "boost": {
            "description": "The boost of this term_query_predicate.",
            "type": "number"
          }
        }
        }
      },
      "laplacian.arch.api.service.elasticsearch.query.TermsQueryPredicate": {
        "description": "An entity describing a terms_query_predicate.",
        "if": { "properties": {
          "type": { "const": "terms" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "terms_query_predicate" },
          "type": {
            "description": "The type of this elasticsearch_query_predicate.",
            "enum":[
              "bool",
              "exists",
              "match_all",
              "match",
              "multi_match",
              "query_string",
              "range",
              "term",
              "terms"
            ],
            "type": "string"
          },
          "field": {
            "description": "The field of this terms_query_predicate.",
            "type": "string"
          },
          "value": {
            "description": "The value of this terms_query_predicate.",
            "type": "string"
          },
          "boost": {
            "description": "The boost of this terms_query_predicate.",
            "type": "number"
          }
        }
        }
      },
      "laplacian.arch.api.service.graphql.ExternalRestResource": {
        "description": "An entity describing a external_rest_resource.",
        "if": { "properties": {
          "resolver_type": { "const": "external_rest_resource" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "external_rest_resource" },
          "name": {
            "description": "The name of this graphql_type.",
            "type": "string"
          },
          "resolver_type": {
            "description": "The resolver_type of this graphql_type.",
            "enum":[
              "external_rest_resource",
              "indexed_document",
              "rdbms_table",
              "static_data"
            ],
            "type": "string"
          },
          "description": {
            "description": "The description of this graphql_type.",
            "type": "string"
          },
          "rest_resource_name": {
            "description": "The rest_resource_name of this external_rest_resource.",
            "type": "string"
          },
          "relationships": {
            "description": "The relationships of this graphql_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationship"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.graphql.IndexedDocument": {
        "description": "An entity describing a indexed_document.",
        "if": { "properties": {
          "resolver_type": { "const": "indexed_document" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "indexed_document" },
          "name": {
            "description": "The name of this graphql_type.",
            "type": "string"
          },
          "resolver_type": {
            "description": "The resolver_type of this graphql_type.",
            "enum":[
              "external_rest_resource",
              "indexed_document",
              "rdbms_table",
              "static_data"
            ],
            "type": "string"
          },
          "description": {
            "description": "The description of this graphql_type.",
            "type": "string"
          },
          "index_name": {
            "description": "The index_name of this indexed_document.",
            "type": "string"
          },
          "search_engine_client_name": {
            "description": "The search_engine_client_name of this indexed_document.",
            "type": "string"
          },
          "default_searcher_name": {
            "description": "The default_searcher_name of this indexed_document.",
            "type": "string"
          },
          "relationships": {
            "description": "The relationships of this graphql_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationship"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.graphql.RdbmsTable": {
        "description": "An entity describing a rdbms_table.",
        "if": { "properties": {
          "resolver_type": { "const": "rdbms_table" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "rdbms_table" },
          "name": {
            "description": "The name of this graphql_type.",
            "type": "string"
          },
          "resolver_type": {
            "description": "The resolver_type of this graphql_type.",
            "enum":[
              "external_rest_resource",
              "indexed_document",
              "rdbms_table",
              "static_data"
            ],
            "type": "string"
          },
          "description": {
            "description": "The description of this graphql_type.",
            "type": "string"
          },
          "data_model_name": {
            "description": "The data_model_name of this rdbms_table.",
            "type": "string"
          },
          "table_name": {
            "description": "The table_name of this rdbms_table.",
            "type": "string"
          },
          "datasource_name": {
            "description": "The datasource_name of this rdbms_table.",
            "type": "string"
          },
          "relationships": {
            "description": "The relationships of this graphql_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationship"
            }
          },
          "mybatis_mapper_entries": {
            "description": "The mybatis_mapper_entries of this rdbms_table.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.rdb.mybatis.MybatisMapperEntry"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.graphql.StaticData": {
        "description": "An entity describing a static_data.",
        "if": { "properties": {
          "resolver_type": { "const": "static_data" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "static_data" },
          "name": {
            "description": "The name of this graphql_type.",
            "type": "string"
          },
          "resolver_type": {
            "description": "The resolver_type of this graphql_type.",
            "enum":[
              "external_rest_resource",
              "indexed_document",
              "rdbms_table",
              "static_data"
            ],
            "type": "string"
          },
          "description": {
            "description": "The description of this graphql_type.",
            "type": "string"
          },
          "data_model_name": {
            "description": "The data_model_name of this static_data.",
            "type": "string"
          },
          "default_query_name": {
            "description": "The default_query_name of this static_data.",
            "type": "string"
          },
          "relationships": {
            "description": "The relationships of this graphql_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationship"
            }
          },
          "queries": {
            "description": "The queries of this static_data.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.static_data.Query"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.graphql.static_data.Query": {
        "description": "An entity describing a query.",
        "type": "object",
        "required": [
          "name",
          "snippet"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "query" },
          "name": {
            "description": "The name of this query.",
            "type": "string"
          },
          "description": {
            "description": "The description of this query.",
            "type": "string"
          },
          "result_model_name": {
            "description": "The result_model_name of this query.",
            "type": "string"
          },
          "result_model_namespace": {
            "description": "The result_model_namespace of this query.",
            "type": "string"
          },
          "snippet": {
            "description": "The snippet of this query.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.rdb.mybatis.MybatisMapper": {
        "description": "An entity describing a mybatis_mapper.",
        "type": "object",
        "required": [
          "group_id",
          "id",
          "type",
          "statement"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "mybatis_mapper" },
          "group_id": {
            "allOf": [{
            "description": "The group_id of this mybatis_mapper.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/namespace"
            }]
          },
          "id": {
            "allOf": [{
            "description": "The id of this mybatis_mapper.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/identifier"
            }]
          },
          "result_model_name": {
            "description": "The result_model_name of this mybatis_mapper.",
            "type": "string"
          },
          "type": {
            "description": "The type of this mybatis_mapper.",
            "enum":[
              "select",
              "insert",
              "update",
              "delete",
              "fragment"
            ],
            "type": "string"
          },
          "statement": {
            "description": "The statement of this mybatis_mapper.",
            "type": "string"
          },
          "parameters": {
            "description": "The parameters of this mybatis_mapper.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ApiCallArgument"
            }
          }
        }
      },
      "laplacian.arch.api.service.rdb.mybatis.MybatisMapperEntry": {
        "description": "An entity describing a mybatis_mapper_entry.",
        "type": "object",
        "required": [
          "group_id",
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "mybatis_mapper_entry" },
          "group_id": {
            "description": "The group_id of this mybatis_mapper_entry.",
            "type": "string"
          },
          "id": {
            "description": "The id of this mybatis_mapper_entry.",
            "type": "string"
          },
          "context_entity_name": {
            "description": "The context_entity_name of this mybatis_mapper_entry.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.rest.RestOperation": {
        "description": "An entity describing a rest_operation.",
        "type": "object",
        "required": [
          "method",
          "path",
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "rest_operation" },
          "method": {
            "allOf": [{
            "description": "The method of this rest_operation.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/http_method_for_rest"
            }]
          },
          "path": {
            "description": "The path of this rest_operation.",
            "type": "string"
          },
          "name": {
            "description": "The name of this rest_operation.",
            "type": "string"
          },
          "description": {
            "description": "The description of this rest_operation.",
            "type": "string"
          },
          "response_model_name": {
            "description": "The response_model_name of this rest_operation.",
            "type": "string"
          },
          "cache_policy_name": {
            "description": "The cache_policy_name of this rest_operation.",
            "type": "string"
          },
          "arguments": {
            "description": "The arguments of this rest_operation.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ApiCallArgument"
            }
          },
          "path_parameters": {
            "description": "The path_parameters of this rest_operation.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestRequestParameter"
            }
          },
          "query_parameters": {
            "description": "The query_parameters of this rest_operation.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestRequestParameter"
            }
          },
          "http_headers": {
            "description": "The http_headers of this rest_operation.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestRequestParameter"
            }
          }
        }
      },
      "laplacian.arch.api.service.rest.RestRequestParameter": {
        "description": "An entity describing a rest_request_parameter.",
        "type": "object",
        "required": [
          "name",
          "type",
          "value"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "rest_request_parameter" },
          "name": {
            "description": "The name of this rest_request_parameter.",
            "type": "string"
          },
          "type": {
            "description": "The type of this rest_request_parameter.",
            "enum":[
              "string",
              "number",
              "boolean",
              "object"
            ],
            "type": "string"
          },
          "multiple": {
            "description": "Defines this rest_request_parameter is multiple or not.",
            "type": "boolean"
          },
          "value": {
            "description": "The value of this rest_request_parameter.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.rest.RestResource": {
        "description": "An entity describing a rest_resource.",
        "type": "object",
        "required": [
          "name",
          "base_url"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "rest_resource" },
          "name": {
            "description": "The name of this rest_resource.",
            "type": "string"
          },
          "description": {
            "description": "The description of this rest_resource.",
            "type": "string"
          },
          "resource_model_name": {
            "description": "The resource_model_name of this rest_resource.",
            "type": "string"
          },
          "base_url": {
            "description": "The base_url of this rest_resource.",
            "type": "string"
          },
          "cache_policy_name": {
            "description": "The cache_policy_name of this rest_resource.",
            "type": "string"
          },
          "enable_automatic_cookie_handling": {
            "description": "Defines this rest_resource is enable_automatic_cookie_handling or not.",
            "type": "boolean"
          },
          "operations": {
            "description": "The operations of this rest_resource.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestOperation"
            }
          },
          "configurations": {
            "description": "The configurations of this rest_resource.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding"
            }
          }
        }
      },
      "laplacian.arch.api.service.Service": {
        "description": "An entity describing a service.",
        "type": "object",
        "required": [
          "name",
          "version"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "service" },
          "name": {
            "description": "The name of this service.",
            "type": "string"
          },
          "version": {
            "description": "The version of this service.",
            "type": "string"
          },
          "namespace": {
            "allOf": [{
            "description": "The namespace of this service.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/namespace"
            }]
          },
          "description": {
            "description": "The description of this service.",
            "type": "string"
          },
          "datasource_entries": {
            "description": "The datasource_entries of this service.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.datasource.DatasourceEntry"
            }
          },
          "graphql_type_entries": {
            "description": "The graphql_type_entries of this service.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.GraphqlTypeEntry"
            }
          },
          "elastic_search_clients": {
            "description": "The elastic_search_clients of this service.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ElasticSearchClient"
            }
          },
          "configuration_categories": {
            "description": "The configuration_categories of this service.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.ServiceConfigurationCategory"
            }
          }
        }
      },
      "laplacian.arch.api.service.ElasticSearchClient": {
        "description": "An entity describing a elastic_search_client.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elastic_search_client" },
          "name": {
            "description": "The name of this elastic_search_client.",
            "type": "string"
          },
          "is_default": {
            "description": "Defines this elastic_search_client is is_default or not.",
            "type": "boolean"
          },
          "configuration_category": {
            "allOf": [{
            "description": "The configuration_category of this elastic_search_client.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_category"
            }]
          },
          "configuration_name_of_endpoints": {
            "allOf": [{
            "description": "The configuration_name_of_endpoints of this elastic_search_client.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_name"
            }]
          },
          "configuration_name_of_path_prefix": {
            "allOf": [{
            "description": "The configuration_name_of_path_prefix of this elastic_search_client.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_name"
            }]
          },
          "configuration_name_of_connect_timeout": {
            "allOf": [{
            "description": "The configuration_name_of_connect_timeout of this elastic_search_client.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_name"
            }]
          },
          "configuration_name_of_socket_timeout": {
            "allOf": [{
            "description": "The configuration_name_of_socket_timeout of this elastic_search_client.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_name"
            }]
          },
          "configuration_name_of_max_in_memory_size": {
            "allOf": [{
            "description": "The configuration_name_of_max_in_memory_size of this elastic_search_client.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_name"
            }]
          }
        }
      },
      "laplacian.arch.api.service.graphql.GraphqlType": {
        "description": "An entity describing a graphql_type.",
        "type": "object",
        "required": [
          "name",
          "resolver_type"
        ],
        "properties": {
          "_class_": { "const": "graphql_type" },
          "name": {
            "description": "The name of this graphql_type.",
            "type": "string"
          },
          "resolver_type": {
            "description": "The resolver_type of this graphql_type.",
            "enum":[
              "external_rest_resource",
              "indexed_document",
              "rdbms_table",
              "static_data"
            ],
            "type": "string"
          },
          "description": {
            "description": "The description of this graphql_type.",
            "type": "string"
          },
          "relationships": {
            "description": "The relationships of this graphql_type.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationship"
            }
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.ExternalRestResource" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.IndexedDocument" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.RdbmsTable" },
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.StaticData" }
        ]
      },
      "laplacian.arch.api.service.GraphqlTypeEntry": {
        "description": "An entity describing a graphql_type_entry.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "graphql_type_entry" },
          "name": {
            "description": "The name of this graphql_type_entry.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.graphql.GraphqlTypeRelationship": {
        "description": "An entity describing a graphql_type_relationship.",
        "type": "object",
        "required": [
          "name",
          "type",
          "referencing_graphql_type_name"
        ],
        "properties": {
          "_class_": { "const": "graphql_type_relationship" },
          "name": {
            "description": "The name of this graphql_type_relationship.",
            "type": "string"
          },
          "description": {
            "description": "The description of this graphql_type_relationship.",
            "type": "string"
          },
          "type": {
            "description": "The type of this graphql_type_relationship.",
            "enum":[
              "indexed_document"
            ],
            "type": "string"
          },
          "referencing_graphql_type_name": {
            "description": "The referencing_graphql_type_name of this graphql_type_relationship.",
            "type": "string"
          },
          "multiple": {
            "description": "Defines this graphql_type_relationship is multiple or not.",
            "type": "boolean"
          },
          "nullable": {
            "description": "Defines this graphql_type_relationship is nullable or not.",
            "type": "boolean"
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlIndexedDocumentRelationship" }
        ]
      },
      "laplacian.arch.api.service.graphql.GraphqlIndexedDocumentRelationship": {
        "description": "An entity describing a graphql_indexed_document_relationship.",
        "if": { "properties": {
          "type": { "const": "indexed_document" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "graphql_indexed_document_relationship" },
          "name": {
            "description": "The name of this graphql_type_relationship.",
            "type": "string"
          },
          "description": {
            "description": "The description of this graphql_type_relationship.",
            "type": "string"
          },
          "type": {
            "description": "The type of this graphql_type_relationship.",
            "enum":[
              "indexed_document"
            ],
            "type": "string"
          },
          "referencing_graphql_type_name": {
            "description": "The referencing_graphql_type_name of this graphql_type_relationship.",
            "type": "string"
          },
          "multiple": {
            "description": "Defines this graphql_type_relationship is multiple or not.",
            "type": "boolean"
          },
          "nullable": {
            "description": "Defines this graphql_type_relationship is nullable or not.",
            "type": "boolean"
          },
          "field_mappings": {
            "description": "The field_mappings of this graphql_indexed_document_relationship.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationshipFieldMapping"
            }
          }
        }
        }
      },
      "laplacian.arch.api.service.graphql.GraphqlTypeRelationshipFieldMapping": {
        "description": "An entity describing a graphql_type_relationship_field_mapping.",
        "type": "object",
        "required": [
          "from",
          "to"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "graphql_type_relationship_field_mapping" },
          "from": {
            "description": "The from of this graphql_type_relationship_field_mapping.",
            "type": "string"
          },
          "to": {
            "description": "The to of this graphql_type_relationship_field_mapping.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.ServiceConfiguration": {
        "description": "An entity describing a service_configuration.",
        "type": "object",
        "required": [
          "name",
          "category",
          "type"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "service_configuration" },
          "name": {
            "allOf": [{
            "description": "The name of this service_configuration.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_name"
            }]
          },
          "category": {
            "allOf": [{
            "description": "The category of this service_configuration.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/service_configuration_category"
            }]
          },
          "type": {
            "description": "The type of this service_configuration.",
            "enum":[
              "string",
              "int",
              "float",
              "boolean"
            ],
            "type": "string"
          },
          "default_value": {
            "description": "The default_value of this service_configuration.",
            "type": "string"
          },
          "environment_variable_name": {
            "description": "The environment_variable_name of this service_configuration.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.ServiceConfigurationCategory": {
        "description": "An entity describing a service_configuration_category.",
        "type": "object",
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "service_configuration_category" },
          "name": {
            "description": "The name of this service_configuration_category.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.api.service.ConfigurationBinding": {
        "description": "An entity describing a configuration_binding.",
        "type": "object",
        "required": [
          "name",
          "category"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "configuration_binding" },
          "name": {
            "description": "The name of this configuration_binding.",
            "pattern": "^[a-z][-a-z0-9]*$",
            "type": "string"
          },
          "category": {
            "description": "The category of this configuration_binding.",
            "pattern": "^[a-z][-a-z0-9]*(\\.[a-z][-a-z0-9]*)*$",
            "type": "string"
          },
          "variable_name": {
            "description": "The variable_name of this configuration_binding.",
            "pattern": "^[a-z][a-zA-Z0-9]*$",
            "type": "string"
          }
        }
      },
      "laplacian.arch.deployment.component.Component": {
        "description": "An entity describing a component.",
        "type": "object",
        "required": [
          "name",
          "type",
          "tags"
        ],
        "properties": {
          "_class_": { "const": "component" },
          "name": {
            "description": "The name of this component.",
            "type": "string"
          },
          "type": {
            "description": "The type of this component.",
            "enum":[
              "container_image",
              "elasticsearch_container_image",
              "postgres_container_image",
              "springboot2_api_service_container_image"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
            "description": "The tags of this component.",
            "type": "string"
            }
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.container.ContainerImage" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.elasticsearch.ElasticsearchContainerImage" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.postgres.PostgresContainerImage" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.springboot2_api_service.Springboot2ApiServiceContainerImage" }
        ]
      },
      "laplacian.arch.deployment.component.container.ContainerImage": {
        "description": "An entity describing a container_image.",
        "if": { "properties": {
          "type": { "const": "container_image" }
        }},
        "then": {
        "properties": {
          "_class_": { "const": "container_image" },
          "name": {
            "description": "The name of this component.",
            "type": "string"
          },
          "type": {
            "description": "The type of this component.",
            "enum":[
              "container_image",
              "elasticsearch_container_image",
              "postgres_container_image",
              "springboot2_api_service_container_image"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
            "description": "The tags of this component.",
            "type": "string"
            }
          },
          "image_name": {
            "description": "The image_name of this container_image.",
            "type": "string"
          },
          "custom_built": {
            "description": "Defines this container_image is custom_built or not.",
            "type": "boolean"
          },
          "environment_variables": {
            "description": "The environment_variables of this container_image.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.component.container.EnvironmentVariableDefinition"
            }
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.elasticsearch.ElasticsearchContainerImage" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.postgres.PostgresContainerImage" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.springboot2_api_service.Springboot2ApiServiceContainerImage" }
        ]
        }
      },
      "laplacian.arch.deployment.component.container.EnvironmentVariableDefinition": {
        "description": "An entity describing a environment_variable_definition.",
        "type": "object",
        "required": [
          "name",
          "default_value"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "environment_variable_definition" },
          "name": {
            "allOf": [{
            "description": "The name of this environment_variable_definition.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/identifier"
            }]
          },
          "description": {
            "description": "The description of this environment_variable_definition.",
            "type": "string"
          },
          "optional": {
            "description": "Defines this environment_variable_definition is optional or not.",
            "type": "boolean"
          },
          "default_value": {
            "description": "The default_value of this environment_variable_definition.",
            "type": "string"
          },
          "multiple": {
            "description": "Defines this environment_variable_definition is multiple or not.",
            "type": "boolean"
          }
        }
      },
      "laplacian.arch.deployment.component.elasticsearch.ElasticsearchContainerDeployment": {
        "description": "An entity describing a elasticsearch_container_deployment.",
        "if": { "properties": {
          "type": { "const": "elasticsearch_container_deployment" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elasticsearch_container_deployment" },
          "name": {
            "description": "The name of this deployment.",
            "type": "string"
          },
          "type": {
            "description": "The type of this deployment.",
            "enum":[
              "container_deployment",
              "elasticsearch_container_deployment",
              "postgres_container_deployment",
              "springboot2_api_service_container_deployment",
              "container_on_gce_instance",
              "container_on_gcp_cloudrun"
            ],
            "type": "string"
          },
          "instance_name": {
            "description": "The instance_name of this container_deployment.",
            "type": "string"
          },
          "tag": {
            "description": "The tag of this container_deployment.",
            "type": "string"
          },
          "use_locally_built_image": {
            "description": "Defines this container_deployment is use_locally_built_image or not.",
            "type": "boolean"
          },
          "port": {
            "description": "The port of this elasticsearch_container_deployment.",
            "type": "number"
          },
          "environment_variables": {
            "description": "The environment_variables of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.EnvironmentVariableAssignment"
            }
          },
          "data_files": {
            "description": "The data_files of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.DataFile"
            }
          }
        }
        }
      },
      "laplacian.arch.deployment.component.elasticsearch.ElasticsearchContainerImage": {
        "description": "An entity describing a elasticsearch_container_image.",
        "if": { "properties": {
          "type": { "const": "elasticsearch_container_image" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "elasticsearch_container_image" },
          "name": {
            "description": "The name of this component.",
            "type": "string"
          },
          "type": {
            "description": "The type of this component.",
            "enum":[
              "container_image",
              "elasticsearch_container_image",
              "postgres_container_image",
              "springboot2_api_service_container_image"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
            "description": "The tags of this component.",
            "type": "string"
            }
          },
          "image_name": {
            "description": "The image_name of this container_image.",
            "type": "string"
          },
          "custom_built": {
            "description": "Defines this container_image is custom_built or not.",
            "type": "boolean"
          },
          "container_image": {
            "description": "The container_image of this elasticsearch_container_image.",
            "type": "string"
          },
          "plugins": {
            "type": "array",
            "items": {
            "description": "The plugins of this elasticsearch_container_image.",
            "type": "string"
            }
          },
          "configuration_file_dir_path": {
            "description": "The configuration_file_dir_path of this elasticsearch_container_image.",
            "type": "string"
          },
          "environment_variables": {
            "description": "The environment_variables of this container_image.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.component.container.EnvironmentVariableDefinition"
            }
          },
          "configuration_files": {
            "description": "The configuration_files of this elasticsearch_container_image.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.component.elasticsearch.ConfigurationFile"
            }
          }
        }
        }
      },
      "laplacian.arch.deployment.component.elasticsearch.ConfigurationFile": {
        "description": "An entity describing a configuration_file.",
        "type": "object",
        "required": [
          "path"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "configuration_file" },
          "path": {
            "description": "The path of this configuration_file.",
            "type": "string"
          },
          "content": {
            "description": "The content of this configuration_file.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.deployment.component.MavenArtifact": {
        "description": "An entity describing a maven_artifact.",
        "type": "object",
        "required": [
          "group",
          "name",
          "version"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "maven_artifact" },
          "group": {
            "description": "The group of this maven_artifact.",
            "type": "string"
          },
          "name": {
            "description": "The name of this maven_artifact.",
            "type": "string"
          },
          "version": {
            "description": "The version of this maven_artifact.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.deployment.component.postgres.PostgresContainerDeployment": {
        "description": "An entity describing a postgres_container_deployment.",
        "if": { "properties": {
          "type": { "const": "postgres_container_deployment" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "postgres_container_deployment" },
          "name": {
            "description": "The name of this deployment.",
            "type": "string"
          },
          "type": {
            "description": "The type of this deployment.",
            "enum":[
              "container_deployment",
              "elasticsearch_container_deployment",
              "postgres_container_deployment",
              "springboot2_api_service_container_deployment",
              "container_on_gce_instance",
              "container_on_gcp_cloudrun"
            ],
            "type": "string"
          },
          "instance_name": {
            "description": "The instance_name of this container_deployment.",
            "type": "string"
          },
          "tag": {
            "description": "The tag of this container_deployment.",
            "type": "string"
          },
          "use_locally_built_image": {
            "description": "Defines this container_deployment is use_locally_built_image or not.",
            "type": "boolean"
          },
          "username": {
            "description": "The username of this postgres_container_deployment.",
            "type": "string"
          },
          "password": {
            "description": "The password of this postgres_container_deployment.",
            "type": "string"
          },
          "database_name": {
            "description": "The database_name of this postgres_container_deployment.",
            "type": "string"
          },
          "port": {
            "description": "The port of this postgres_container_deployment.",
            "type": "number"
          },
          "environment_variables": {
            "description": "The environment_variables of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.EnvironmentVariableAssignment"
            }
          },
          "data_files": {
            "description": "The data_files of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.DataFile"
            }
          }
        }
        }
      },
      "laplacian.arch.deployment.component.postgres.PostgresContainerImage": {
        "description": "An entity describing a postgres_container_image.",
        "if": { "properties": {
          "type": { "const": "postgres_container_image" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "postgres_container_image" },
          "name": {
            "description": "The name of this component.",
            "type": "string"
          },
          "type": {
            "description": "The type of this component.",
            "enum":[
              "container_image",
              "elasticsearch_container_image",
              "postgres_container_image",
              "springboot2_api_service_container_image"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
            "description": "The tags of this component.",
            "type": "string"
            }
          },
          "image_name": {
            "description": "The image_name of this container_image.",
            "type": "string"
          },
          "custom_built": {
            "description": "Defines this container_image is custom_built or not.",
            "type": "boolean"
          },
          "image_name": {
            "description": "The image_name of this postgres_container_image.",
            "type": "string"
          },
          "environment_variables": {
            "description": "The environment_variables of this container_image.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.component.container.EnvironmentVariableDefinition"
            }
          }
        }
        }
      },
      "laplacian.arch.deployment.component.redis.RedisContainerDeployment": {
        "description": "An entity describing a redis_container_deployment.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "redis_container_deployment" },
          "port": {
            "description": "The port of this redis_container_deployment.",
            "type": "number"
          }
        }
      },
      "laplacian.arch.deployment.component.redis.RedisContainerImage": {
        "description": "An entity describing a redis_container_image.",
        "type": "object",
        "required": [
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "redis_container_image" },
          "image_name": {
            "description": "The image_name of this redis_container_image.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.deployment.component.springboot2_api_service.Springboot2ApiServiceContainerImage": {
        "description": "An entity describing a springboot2_api_service_container_image.",
        "if": { "properties": {
          "type": { "const": "springboot2_api_service_container_image" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "springboot2_api_service_container_image" },
          "name": {
            "description": "The name of this component.",
            "type": "string"
          },
          "type": {
            "description": "The type of this component.",
            "enum":[
              "container_image",
              "elasticsearch_container_image",
              "postgres_container_image",
              "springboot2_api_service_container_image"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
            "description": "The tags of this component.",
            "type": "string"
            }
          },
          "image_name": {
            "description": "The image_name of this container_image.",
            "type": "string"
          },
          "custom_built": {
            "description": "Defines this container_image is custom_built or not.",
            "type": "boolean"
          },
          "function_model_name": {
            "description": "The function_model_name of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "container_base_image": {
            "description": "The container_base_image of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "gradle_version": {
            "description": "The gradle_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "jdk_major_version": {
            "description": "The jdk_major_version of this springboot2_api_service_container_image.",
            "enum":[
              "11",
              "14",
              "8"
            ],
            "type": "string"
          },
          "kotlin_version": {
            "description": "The kotlin_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "kotlin_coroutine_version": {
            "description": "The kotlin_coroutine_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "r2dbc_postgres_driver_version": {
            "description": "The r2dbc_postgres_driver_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "oracle_jdbc_driver_version": {
            "description": "The oracle_jdbc_driver_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "springboot_version": {
            "description": "The springboot_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "springboot_graphql_webflux_version": {
            "description": "The springboot_graphql_webflux_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "spring_dependency_manager_version": {
            "description": "The spring_dependency_manager_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "graphql_extended_scalar_version": {
            "description": "The graphql_extended_scalar_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "springboot_mybatis_version": {
            "description": "The springboot_mybatis_version of this springboot2_api_service_container_image.",
            "type": "string"
          },
          "repositories": {
            "type": "array",
            "items": {
            "description": "The repositories of this springboot2_api_service_container_image.",
            "type": "string"
            }
          },
          "environment_variables": {
            "description": "The environment_variables of this container_image.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.component.container.EnvironmentVariableDefinition"
            }
          },
          "additional_libraries": {
            "description": "The additional_libraries of this springboot2_api_service_container_image.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.component.MavenArtifact"
            }
          }
        }
        }
      },
      "laplacian.arch.deployment.component.springboot2_api_service.Springboot2ApiServiceContainerDeployment": {
        "description": "An entity describing a springboot2_api_service_container_deployment.",
        "if": { "properties": {
          "type": { "const": "springboot2_api_service_container_deployment" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "springboot2_api_service_container_deployment" },
          "name": {
            "description": "The name of this deployment.",
            "type": "string"
          },
          "type": {
            "description": "The type of this deployment.",
            "enum":[
              "container_deployment",
              "elasticsearch_container_deployment",
              "postgres_container_deployment",
              "springboot2_api_service_container_deployment",
              "container_on_gce_instance",
              "container_on_gcp_cloudrun"
            ],
            "type": "string"
          },
          "instance_name": {
            "description": "The instance_name of this container_deployment.",
            "type": "string"
          },
          "tag": {
            "description": "The tag of this container_deployment.",
            "type": "string"
          },
          "use_locally_built_image": {
            "description": "Defines this container_deployment is use_locally_built_image or not.",
            "type": "boolean"
          },
          "http_port": {
            "description": "The http_port of this springboot2_api_service_container_deployment.",
            "type": "number"
          },
          "enable_jmx": {
            "description": "Defines this springboot2_api_service_container_deployment is enable_jmx or not.",
            "type": "boolean"
          },
          "jmx_port": {
            "description": "The jmx_port of this springboot2_api_service_container_deployment.",
            "type": "number"
          },
          "enable_debug": {
            "description": "Defines this springboot2_api_service_container_deployment is enable_debug or not.",
            "type": "boolean"
          },
          "debug_port": {
            "description": "The debug_port of this springboot2_api_service_container_deployment.",
            "type": "number"
          },
          "environment_variables": {
            "description": "The environment_variables of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.EnvironmentVariableAssignment"
            }
          },
          "data_files": {
            "description": "The data_files of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.DataFile"
            }
          }
        }
        }
      },
      "laplacian.arch.deployment.Dataset": {
        "description": "An entity describing a dataset.",
        "type": "object",
        "required": [
          "name",
          "content"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "dataset" },
          "name": {
            "description": "The name of this dataset.",
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
            "description": "The tags of this dataset.",
            "type": "string"
            }
          },
          "content": {
            "type": "array",
            "items": {
            "$ref": "#/definitions/entities/AnyEntity",
            "description": "The content of this dataset.",
            "type": "object"
            }
          }
        }
      },
      "laplacian.arch.deployment.Deployment": {
        "description": "An entity describing a deployment.",
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "_class_": { "const": "deployment" },
          "name": {
            "description": "The name of this deployment.",
            "type": "string"
          },
          "type": {
            "description": "The type of this deployment.",
            "enum":[
              "container_deployment",
              "elasticsearch_container_deployment",
              "postgres_container_deployment",
              "springboot2_api_service_container_deployment",
              "container_on_gce_instance",
              "container_on_gcp_cloudrun"
            ],
            "type": "string"
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.container.ContainerDeployment" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.elasticsearch.ElasticsearchContainerDeployment" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.postgres.PostgresContainerDeployment" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.springboot2_api_service.Springboot2ApiServiceContainerDeployment" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.ContainerOnGceInstance" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.ContainerOnGcpCloudrun" }
        ]
      },
      "laplacian.arch.deployment.container.ContainerDeployment": {
        "description": "An entity describing a container_deployment.",
        "if": { "properties": {
          "type": { "const": "container_deployment" }
        }},
        "then": {
        "properties": {
          "_class_": { "const": "container_deployment" },
          "name": {
            "description": "The name of this deployment.",
            "type": "string"
          },
          "type": {
            "description": "The type of this deployment.",
            "enum":[
              "container_deployment",
              "elasticsearch_container_deployment",
              "postgres_container_deployment",
              "springboot2_api_service_container_deployment",
              "container_on_gce_instance",
              "container_on_gcp_cloudrun"
            ],
            "type": "string"
          },
          "instance_name": {
            "description": "The instance_name of this container_deployment.",
            "type": "string"
          },
          "tag": {
            "description": "The tag of this container_deployment.",
            "type": "string"
          },
          "use_locally_built_image": {
            "description": "Defines this container_deployment is use_locally_built_image or not.",
            "type": "boolean"
          },
          "environment_variables": {
            "description": "The environment_variables of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.EnvironmentVariableAssignment"
            }
          },
          "data_files": {
            "description": "The data_files of this container_deployment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.container.DataFile"
            }
          }
        },
        "allOf": [
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.elasticsearch.ElasticsearchContainerDeployment" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.postgres.PostgresContainerDeployment" },
          { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.springboot2_api_service.Springboot2ApiServiceContainerDeployment" }
        ]
        }
      },
      "laplacian.arch.deployment.container.DataFile": {
        "description": "An entity describing a data_file.",
        "type": "object",
        "required": [
          "filename",
          "dataset_name"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "data_file" },
          "filename": {
            "description": "The filename of this data_file.",
            "type": "string"
          },
          "dir": {
            "description": "The dir of this data_file.",
            "type": "string"
          },
          "dataset_name": {
            "description": "The dataset_name of this data_file.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.deployment.container.EnvironmentVariableAssignment": {
        "description": "An entity describing a environment_variable_assignment.",
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "environment_variable_assignment" },
          "name": {
            "allOf": [{
            "description": "The name of this environment_variable_assignment.",
            "type": "string"
            }, {
            "$ref": "#/definitions/value_domain_types/identifier"
            }]
          },
          "value": {
            "description": "The value of this environment_variable_assignment.",
            "type": "string"
          }
        }
      },
      "laplacian.arch.deployment.ContainerOnGceInstance": {
        "description": "An entity describing a container_on_gce_instance.",
        "if": { "properties": {
          "type": { "const": "container_on_gce_instance" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "container_on_gce_instance" },
          "name": {
            "description": "The name of this deployment.",
            "type": "string"
          },
          "type": {
            "description": "The type of this deployment.",
            "enum":[
              "container_deployment",
              "elasticsearch_container_deployment",
              "postgres_container_deployment",
              "springboot2_api_service_container_deployment",
              "container_on_gce_instance",
              "container_on_gcp_cloudrun"
            ],
            "type": "string"
          },
          "machine_type": {
            "description": "The machine_type of this container_on_gce_instance.",
            "enum":[
              "f1-micro",
              "g1-small"
            ],
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.deployment.ContainerOnGcpCloudrun": {
        "description": "An entity describing a container_on_gcp_cloudrun.",
        "if": { "properties": {
          "type": { "const": "container_on_gcp_cloudrun" }
        }},
        "then": {
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "container_on_gcp_cloudrun" },
          "name": {
            "description": "The name of this deployment.",
            "type": "string"
          },
          "type": {
            "description": "The type of this deployment.",
            "enum":[
              "container_deployment",
              "elasticsearch_container_deployment",
              "postgres_container_deployment",
              "springboot2_api_service_container_deployment",
              "container_on_gce_instance",
              "container_on_gcp_cloudrun"
            ],
            "type": "string"
          }
        }
        }
      },
      "laplacian.arch.deployment.Environment": {
        "description": "An entity describing a environment.",
        "type": "object",
        "required": [
          "name",
          "tier"
        ],
        "additionalProperties": false,
        "properties": {
          "_class_": { "const": "environment" },
          "name": {
            "description": "The name of this environment.",
            "type": "string"
          },
          "tier": {
            "description": "The tier of this environment.",
            "enum":[
              "local",
              "development",
              "staging",
              "production"
            ],
            "type": "string"
          },
          "uses_locally_built_container_images": {
            "description": "Defines this environment is uses_locally_built_container_images or not.",
            "type": "boolean"
          },
          "uses_gcp": {
            "description": "Defines this environment is uses_gcp or not.",
            "type": "boolean"
          },
          "deployments": {
            "description": "The deployments of this environment.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/entities/laplacian.arch.deployment.Deployment"
            }
          }
        }
      },
      "AnyEntity": {
        "type": "object",
        "allOf": [{
        "if": { "properties": { "_class_": { "const": "section" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.project.document.Section" }
        }, {
        "if": { "properties": { "_class_": { "const": "project" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.project.Project" }
        }, {
        "if": { "properties": { "_class_": { "const": "project_type" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.project.ProjectType" }
        }, {
        "if": { "properties": { "_class_": { "const": "script" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.project.Script" }
        }, {
        "if": { "properties": { "_class_": { "const": "option" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.project.script.Option" }
        }, {
        "if": { "properties": { "_class_": { "const": "multilingual_text" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.common.MultilingualText" }
        }, {
        "if": { "properties": { "_class_": { "const": "entity" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.metamodel.Entity" }
        }, {
        "if": { "properties": { "_class_": { "const": "value_domain_type" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.metamodel.ValueDomainType" }
        }, {
        "if": { "properties": { "_class_": { "const": "api_call_argument" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.ApiCallArgument" }
        }, {
        "if": { "properties": { "_class_": { "const": "cache_policy" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.cache.CachePolicy" }
        }, {
        "if": { "properties": { "_class_": { "const": "datasource" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.datasource.Datasource" }
        }, {
        "if": { "properties": { "_class_": { "const": "datasource_entry" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.datasource.DatasourceEntry" }
        }, {
        "if": { "properties": { "_class_": { "const": "duration" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.Duration" }
        }, {
        "if": { "properties": { "_class_": { "const": "bucket_script_path" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.BucketScriptPath" }
        }, {
        "if": { "properties": { "_class_": { "const": "field_sort" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.FieldSort" }
        }, {
        "if": { "properties": { "_class_": { "const": "date_histogram_extended_bounds" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramExtendedBounds" }
        }, {
        "if": { "properties": { "_class_": { "const": "date_histogram_interval" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.DateHistogramInterval" }
        }, {
        "if": { "properties": { "_class_": { "const": "aggregate_group_range" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.AggregateGroupRange" }
        }, {
        "if": { "properties": { "_class_": { "const": "keyed_filter" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.KeyedFilter" }
        }, {
        "if": { "properties": { "_class_": { "const": "elasticsearch_aggregate" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.aggregate.ElasticsearchAggregate" }
        }, {
        "if": { "properties": { "_class_": { "const": "elasticsearch_index" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.ElasticsearchIndex" }
        }, {
        "if": { "properties": { "_class_": { "const": "elasticsearch_index_sort" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.ElasticsearchIndexSort" }
        }, {
        "if": { "properties": { "_class_": { "const": "elasticsearch_query_predicate" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQueryPredicate" }
        }, {
        "if": { "properties": { "_class_": { "const": "elasticsearch_query_sort" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.query.ElasticsearchQuerySort" }
        }, {
        "if": { "properties": { "_class_": { "const": "elasticsearch_query" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.elasticsearch.ElasticsearchQuery" }
        }, {
        "if": { "properties": { "_class_": { "const": "mybatis_mapper" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.rdb.mybatis.MybatisMapper" }
        }, {
        "if": { "properties": { "_class_": { "const": "rest_request_parameter" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestRequestParameter" }
        }, {
        "if": { "properties": { "_class_": { "const": "rest_resource" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.rest.RestResource" }
        }, {
        "if": { "properties": { "_class_": { "const": "service" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.Service" }
        }, {
        "if": { "properties": { "_class_": { "const": "elastic_search_client" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.ElasticSearchClient" }
        }, {
        "if": { "properties": { "_class_": { "const": "graphql_type" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlType" }
        }, {
        "if": { "properties": { "_class_": { "const": "graphql_type_relationship_field_mapping" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.graphql.GraphqlTypeRelationshipFieldMapping" }
        }, {
        "if": { "properties": { "_class_": { "const": "service_configuration" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.ServiceConfiguration" }
        }, {
        "if": { "properties": { "_class_": { "const": "service_configuration_category" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.ServiceConfigurationCategory" }
        }, {
        "if": { "properties": { "_class_": { "const": "configuration_binding" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.api.service.ConfigurationBinding" }
        }, {
        "if": { "properties": { "_class_": { "const": "component" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.Component" }
        }, {
        "if": { "properties": { "_class_": { "const": "environment_variable_definition" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.container.EnvironmentVariableDefinition" }
        }, {
        "if": { "properties": { "_class_": { "const": "configuration_file" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.elasticsearch.ConfigurationFile" }
        }, {
        "if": { "properties": { "_class_": { "const": "maven_artifact" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.MavenArtifact" }
        }, {
        "if": { "properties": { "_class_": { "const": "redis_container_deployment" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.redis.RedisContainerDeployment" }
        }, {
        "if": { "properties": { "_class_": { "const": "redis_container_image" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.component.redis.RedisContainerImage" }
        }, {
        "if": { "properties": { "_class_": { "const": "dataset" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.Dataset" }
        }, {
        "if": { "properties": { "_class_": { "const": "data_file" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.container.DataFile" }
        }, {
        "if": { "properties": { "_class_": { "const": "environment" } }},
          "then": { "$ref": "#/definitions/entities/laplacian.arch.deployment.Environment" }
        }]
      }
    }
  }
}